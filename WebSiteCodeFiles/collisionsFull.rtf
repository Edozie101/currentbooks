{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang2057\deflangfe2057{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Helvetica;}
{\f5\fmodern\fcharset0\fprq1{\*\panose 02070409020205020404}Courier{\*\falt Courier New};}{\f6\froman\fcharset0\fprq2{\*\panose 02020603040505020304}Tms Rmn;}{\f7\fswiss\fcharset0\fprq2{\*\panose 020b0604020202030204}Helv;}
{\f8\froman\fcharset0\fprq2{\*\panose 02040503060506020304}New York;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}
{\f11\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f12\froman\fcharset129\fprq2{\*\panose 02030600000101010101}Batang{\*\falt \'b9\'d9\'c5\'c1};}
{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun{\*\falt \'cb\'ce\'cc\'e5};}{\f14\fnil\fcharset136\fprq2{\*\panose 02010601000101010101}PMingLiU{\*\falt \'b7\'73\'b2\'d3\'a9\'fa\'c5\'e9};}
{\f15\fmodern\fcharset128\fprq1{\*\panose 020b0609070205080204}MS Gothic{\*\falt \'82\'6c\'82\'72 \'83\'53\'83\'56\'83\'62\'83\'4e};}{\f16\fmodern\fcharset129\fprq1{\*\panose 020b0600000101010101}Dotum{\*\falt \'b5\'b8\'bf\'f2};}
{\f17\fmodern\fcharset134\fprq1{\*\panose 02010600030101010101}SimHei{\*\falt \'ba\'da\'cc\'e5};}{\f18\fmodern\fcharset136\fprq1{\*\panose 02010609000101010101}MingLiU{\*\falt \'b2\'d3\'a9\'fa\'c5\'e9};}
{\f19\froman\fcharset128\fprq1{\*\panose 02020609040305080305}Mincho{\*\falt \'96\'be\'92\'a9};}{\f20\froman\fcharset129\fprq1{\*\panose 020b0600000101010101}Gulim{\*\falt \'b1\'bc\'b8\'b2};}
{\f21\froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century;}{\f22\froman\fcharset222\fprq2{\*\panose 02020603050405020304}Angsana New;}{\f23\froman\fcharset222\fprq2{\*\panose 020b0304020202020204}Cordia New;}
{\f24\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Mangal;}{\f25\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Latha;}{\f26\froman\fcharset0\fprq2{\*\panose 010a0502050306030303}Sylfaen;}
{\f27\froman\fcharset1\fprq2{\*\panose 00000400000000000000}Vrinda;}{\f28\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Raavi;}{\f29\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Shruti;}
{\f30\froman\fcharset1\fprq2{\*\panose 00000400000000000000}Sendnya;}{\f31\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Gautami;}{\f32\fnil\fcharset0\fprq2{\*\panose 00000400000000000000}Tunga;}
{\f33\froman\fcharset1\fprq2{\*\panose 00000000000000000000}Estrangella Edessa;}{\f34\fswiss\fcharset128\fprq2{\*\panose 020b0604020202020204}Arial Unicode MS;}{\f35\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}
{\f36\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Mojo;}{\f37\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Khaki Two;}{\f38\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Nyx;}
{\f39\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}OCRA Alternate;}{\f40\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Ouch;}{\f41\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Greymantle MVB;}
{\f42\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Shuriken Boy;}{\f43\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Bermuda LP Squiggle;}{\f44\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Spumoni LP;}
{\f45\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Pompeia Inline;}{\f46\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Giddyup;}{\f47\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Myriad Tilt;}
{\f48\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Cutout;}{\f49\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Chaparral Display;}{\f50\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Postino Italic;}
{\f51\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}CMBSY5;}{\f52\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}CMBSY7;}{\f53\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}CMMIB5;}
{\f54\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}CMMIB7;}{\f55\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUEX10;}{\f56\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUFB10;}
{\f57\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUFB5;}{\f58\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUFB7;}{\f59\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUFM10;}
{\f60\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUFM5;}{\f61\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUFM7;}{\f62\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EURB10;}
{\f63\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EURB5;}{\f64\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EURB7;}{\f65\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EURM10;}
{\f66\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EURM5;}{\f67\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EURM7;}{\f68\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUSB10;}
{\f69\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUSB5;}{\f70\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUSB7;}{\f71\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUSM10;}
{\f72\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUSM5;}{\f73\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}EUSM7;}{\f74\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}MSAM10;}
{\f75\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}MSAM5;}{\f76\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}MSAM7;}{\f77\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}MSBM10;}
{\f78\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}MSBM5;}{\f79\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}MSBM7;}{\f80\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}WNCYB10;}
{\f81\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}WNCYI10;}{\f82\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}WNCYR10;}{\f83\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}WNCYSC10;}
{\f84\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}WNCYSS10;}{\f85\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica-Narrow;}{\f86\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}
{\f87\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f88\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f89\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}
{\f90\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f91\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f92\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}
{\f93\froman\fcharset0\fprq2{\*\panose 02040502050405020303}Georgia;}{\f94\fswiss\fcharset0\fprq2{\*\panose 020b0603020102020204}Franklin Gothic Medium;}{\f95\froman\fcharset0\fprq2{\*\panose 02040502050505030304}Palatino Linotype;}
{\f96\fswiss\fcharset0\fprq2{\*\panose 020b0603020202020204}Trebuchet MS;}{\f97\froman\fcharset2\fprq2{\*\panose 05030102010509060703}Webdings;}{\f98\fscript\fcharset0\fprq2 Estrangelo Edessa;}{\f99\fnil\fcharset0\fprq2 MV Boli;}
{\f100\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Microsoft Sans Serif;}{\f101\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f102\fswiss\fcharset128\fprq2{\*\panose 020b0604020202020204}@Arial Unicode MS;}
{\f103\froman\fcharset129\fprq2{\*\panose 02030600000101010101}@Batang;}{\f104\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f105\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}
{\f106\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f107\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}{\f108\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}
{\f109\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}{\f110\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Outlook;}{\f111\fscript\fcharset0\fprq2{\*\panose 03010101010201010101}Monotype Corsiva;}
{\f112\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}{\f113\froman\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f114\froman\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}
{\f115\froman\fcharset2\fprq2{\*\panose 05050102010205020202}MT Extra;}{\f116\fnil\fcharset0\fprq2{\*\panose 01010101010101010101}Adolescence;}{\f117\fswiss\fcharset0\fprq2{\*\panose 020b0804040403020303}Banjoman Open Bold;}
{\f118\fnil\fcharset0\fprq2{\*\panose 02000503000000000004}Bermuda Solid;}{\f119\fdecor\fcharset0\fprq2{\*\panose 04010502060101010303}Creepy;}{\f120\froman\fcharset0\fprq2{\*\panose 02090400040001020404}Curlz MT;}
{\f121\fswiss\fcharset0\fprq2{\*\panose 020c0804040000000001}EraserDust;}{\f122\fnil\fcharset0\fprq2{\*\panose 02000507000000000004}Falstaff Festival MT;}{\f123\fnil\fcharset0\fprq2{\*\panose 01010101010101010101}Figaro MT;}
{\f124\froman\fcharset0\fprq2{\*\panose 02020302060204020203}Footlight MT Light;}{\f125\fnil\fcharset0\fprq2{\*\panose 01010101010101010101}KidTYPEPaint;}{\f126\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Mistral AV;}
{\f127\fnil\fcharset0\fprq2{\*\panose 02000504000000000003}Orbus Multiserif;}{\f128\fnil\fcharset0\fprq2{\*\panose 02000306050000000002}Palace Script MT Semi Bold;}{\f129\fswiss\fcharset0\fprq2{\*\panose 020b0904020202020204}Plump MT;}
{\f130\fmodern\fcharset0\fprq2{\*\panose 02000509000000000005}Space Toaster;}{\f131\fnil\fcharset0\fprq2{\*\panose 02000800000000000004}Team MT;}{\f132\fnil\fcharset0\fprq2{\*\panose 02000702030000020004}Twentieth Century Poster1;}
{\f133\fscript\fcharset0\fprq2{\*\panose 03010101010101010101}Wendy Medium;}{\f134\froman\fcharset238\fprq2 Times New Roman CE;}{\f135\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f137\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f138\froman\fcharset162\fprq2 Times New Roman Tur;}{\f139\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f140\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f141\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f142\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f144\fswiss\fcharset238\fprq2 Arial CE;}{\f145\fswiss\fcharset204\fprq2 Arial Cyr;}{\f147\fswiss\fcharset161\fprq2 Arial Greek;}{\f148\fswiss\fcharset162\fprq2 Arial Tur;}
{\f149\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f150\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f151\fswiss\fcharset186\fprq2 Arial Baltic;}{\f152\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f154\fmodern\fcharset238\fprq1 Courier New CE;}
{\f155\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f157\fmodern\fcharset161\fprq1 Courier New Greek;}{\f158\fmodern\fcharset162\fprq1 Courier New Tur;}{\f159\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f160\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f161\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f162\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}
{\f246\fmodern\fcharset0\fprq1 MS Mincho Western{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f244\fmodern\fcharset238\fprq1 MS Mincho CE{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f245\fmodern\fcharset204\fprq1 MS Mincho Cyr{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f247\fmodern\fcharset161\fprq1 MS Mincho Greek{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f248\fmodern\fcharset162\fprq1 MS Mincho Tur{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}{\f251\fmodern\fcharset186\fprq1 MS Mincho Baltic{\*\falt \'82\'6c\'82\'72 \'96\'be\'92\'a9};}
{\f256\froman\fcharset0\fprq2 Batang Western{\*\falt \'b9\'d9\'c5\'c1};}{\f254\froman\fcharset238\fprq2 Batang CE{\*\falt \'b9\'d9\'c5\'c1};}{\f255\froman\fcharset204\fprq2 Batang Cyr{\*\falt \'b9\'d9\'c5\'c1};}
{\f257\froman\fcharset161\fprq2 Batang Greek{\*\falt \'b9\'d9\'c5\'c1};}{\f258\froman\fcharset162\fprq2 Batang Tur{\*\falt \'b9\'d9\'c5\'c1};}{\f261\froman\fcharset186\fprq2 Batang Baltic{\*\falt \'b9\'d9\'c5\'c1};}
{\f266\fnil\fcharset0\fprq2 SimSun Western{\*\falt \'cb\'ce\'cc\'e5};}{\f344\froman\fcharset238\fprq2 Century CE;}{\f345\froman\fcharset204\fprq2 Century Cyr;}{\f347\froman\fcharset161\fprq2 Century Greek;}{\f348\froman\fcharset162\fprq2 Century Tur;}
{\f351\froman\fcharset186\fprq2 Century Baltic;}{\f394\froman\fcharset238\fprq2 Sylfaen CE;}{\f395\froman\fcharset204\fprq2 Sylfaen Cyr;}{\f397\froman\fcharset161\fprq2 Sylfaen Greek;}{\f398\froman\fcharset162\fprq2 Sylfaen Tur;}
{\f401\froman\fcharset186\fprq2 Sylfaen Baltic;}{\f476\fswiss\fcharset0\fprq2 Arial Unicode MS Western;}{\f474\fswiss\fcharset238\fprq2 Arial Unicode MS CE;}{\f475\fswiss\fcharset204\fprq2 Arial Unicode MS Cyr;}
{\f477\fswiss\fcharset161\fprq2 Arial Unicode MS Greek;}{\f478\fswiss\fcharset162\fprq2 Arial Unicode MS Tur;}{\f479\fswiss\fcharset177\fprq2 Arial Unicode MS (Hebrew);}{\f480\fswiss\fcharset178\fprq2 Arial Unicode MS (Arabic);}
{\f481\fswiss\fcharset186\fprq2 Arial Unicode MS Baltic;}{\f482\fswiss\fcharset163\fprq2 Arial Unicode MS (Vietnamese);}{\f483\fswiss\fcharset222\fprq2 Arial Unicode MS (Thai);}{\f484\fswiss\fcharset238\fprq2 Tahoma CE;}
{\f485\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f487\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f488\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f489\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f490\fswiss\fcharset178\fprq2 Tahoma (Arabic);}
{\f491\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f492\fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}{\f493\fswiss\fcharset222\fprq2 Tahoma (Thai);}{\f1004\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f1005\fmodern\fcharset204\fprq1 Lucida Console Cyr;}
{\f1007\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f1008\fmodern\fcharset162\fprq1 Lucida Console Tur;}{\f1014\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f1015\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}
{\f1017\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f1018\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f1019\fswiss\fcharset177\fprq2 Lucida Sans Unicode (Hebrew);}{\f1024\fswiss\fcharset238\fprq2 Verdana CE;}
{\f1025\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f1027\fswiss\fcharset161\fprq2 Verdana Greek;}{\f1028\fswiss\fcharset162\fprq2 Verdana Tur;}{\f1031\fswiss\fcharset186\fprq2 Verdana Baltic;}{\f1032\fswiss\fcharset163\fprq2 Verdana (Vietnamese);}
{\f1034\fswiss\fcharset238\fprq2 Arial Black CE;}{\f1035\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f1037\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f1038\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f1041\fswiss\fcharset186\fprq2 Arial Black Baltic;}
{\f1044\fscript\fcharset238\fprq2 Comic Sans MS CE;}{\f1045\fscript\fcharset204\fprq2 Comic Sans MS Cyr;}{\f1047\fscript\fcharset161\fprq2 Comic Sans MS Greek;}{\f1048\fscript\fcharset162\fprq2 Comic Sans MS Tur;}
{\f1051\fscript\fcharset186\fprq2 Comic Sans MS Baltic;}{\f1054\fswiss\fcharset238\fprq2 Impact CE;}{\f1055\fswiss\fcharset204\fprq2 Impact Cyr;}{\f1057\fswiss\fcharset161\fprq2 Impact Greek;}{\f1058\fswiss\fcharset162\fprq2 Impact Tur;}
{\f1061\fswiss\fcharset186\fprq2 Impact Baltic;}{\f1064\froman\fcharset238\fprq2 Georgia CE;}{\f1065\froman\fcharset204\fprq2 Georgia Cyr;}{\f1067\froman\fcharset161\fprq2 Georgia Greek;}{\f1068\froman\fcharset162\fprq2 Georgia Tur;}
{\f1071\froman\fcharset186\fprq2 Georgia Baltic;}{\f1074\fswiss\fcharset238\fprq2 Franklin Gothic Medium CE;}{\f1075\fswiss\fcharset204\fprq2 Franklin Gothic Medium Cyr;}{\f1077\fswiss\fcharset161\fprq2 Franklin Gothic Medium Greek;}
{\f1078\fswiss\fcharset162\fprq2 Franklin Gothic Medium Tur;}{\f1081\fswiss\fcharset186\fprq2 Franklin Gothic Medium Baltic;}{\f1084\froman\fcharset238\fprq2 Palatino Linotype CE;}{\f1085\froman\fcharset204\fprq2 Palatino Linotype Cyr;}
{\f1087\froman\fcharset161\fprq2 Palatino Linotype Greek;}{\f1088\froman\fcharset162\fprq2 Palatino Linotype Tur;}{\f1091\froman\fcharset186\fprq2 Palatino Linotype Baltic;}{\f1092\froman\fcharset163\fprq2 Palatino Linotype (Vietnamese);}
{\f1094\fswiss\fcharset238\fprq2 Trebuchet MS CE;}{\f1095\fswiss\fcharset204\fprq2 Trebuchet MS Cyr;}{\f1097\fswiss\fcharset161\fprq2 Trebuchet MS Greek;}{\f1098\fswiss\fcharset162\fprq2 Trebuchet MS Tur;}
{\f1101\fswiss\fcharset186\fprq2 Trebuchet MS Baltic;}{\f1134\fswiss\fcharset238\fprq2 Microsoft Sans Serif CE;}{\f1135\fswiss\fcharset204\fprq2 Microsoft Sans Serif Cyr;}{\f1137\fswiss\fcharset161\fprq2 Microsoft Sans Serif Greek;}
{\f1138\fswiss\fcharset162\fprq2 Microsoft Sans Serif Tur;}{\f1139\fswiss\fcharset177\fprq2 Microsoft Sans Serif (Hebrew);}{\f1140\fswiss\fcharset178\fprq2 Microsoft Sans Serif (Arabic);}{\f1141\fswiss\fcharset186\fprq2 Microsoft Sans Serif Baltic;}
{\f1142\fswiss\fcharset163\fprq2 Microsoft Sans Serif (Vietnamese);}{\f1143\fswiss\fcharset222\fprq2 Microsoft Sans Serif (Thai);}{\f1144\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f1145\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}
{\f1147\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f1148\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f1151\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}{\f1156\fswiss\fcharset0\fprq2 @Arial Unicode MS Western;}
{\f1154\fswiss\fcharset238\fprq2 @Arial Unicode MS CE;}{\f1155\fswiss\fcharset204\fprq2 @Arial Unicode MS Cyr;}{\f1157\fswiss\fcharset161\fprq2 @Arial Unicode MS Greek;}{\f1158\fswiss\fcharset162\fprq2 @Arial Unicode MS Tur;}
{\f1159\fswiss\fcharset177\fprq2 @Arial Unicode MS (Hebrew);}{\f1160\fswiss\fcharset178\fprq2 @Arial Unicode MS (Arabic);}{\f1161\fswiss\fcharset186\fprq2 @Arial Unicode MS Baltic;}{\f1162\fswiss\fcharset163\fprq2 @Arial Unicode MS (Vietnamese);}
{\f1163\fswiss\fcharset222\fprq2 @Arial Unicode MS (Thai);}{\f1166\froman\fcharset0\fprq2 @Batang Western;}{\f1164\froman\fcharset238\fprq2 @Batang CE;}{\f1165\froman\fcharset204\fprq2 @Batang Cyr;}{\f1167\froman\fcharset161\fprq2 @Batang Greek;}
{\f1168\froman\fcharset162\fprq2 @Batang Tur;}{\f1171\froman\fcharset186\fprq2 @Batang Baltic;}{\f1174\froman\fcharset238\fprq2 Book Antiqua CE;}{\f1175\froman\fcharset204\fprq2 Book Antiqua Cyr;}{\f1177\froman\fcharset161\fprq2 Book Antiqua Greek;}
{\f1178\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f1181\froman\fcharset186\fprq2 Book Antiqua Baltic;}{\f1184\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f1185\froman\fcharset204\fprq2 Bookman Old Style Cyr;}
{\f1187\froman\fcharset161\fprq2 Bookman Old Style Greek;}{\f1188\froman\fcharset162\fprq2 Bookman Old Style Tur;}{\f1191\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f1194\fswiss\fcharset238\fprq2 Century Gothic CE;}
{\f1195\fswiss\fcharset204\fprq2 Century Gothic Cyr;}{\f1197\fswiss\fcharset161\fprq2 Century Gothic Greek;}{\f1198\fswiss\fcharset162\fprq2 Century Gothic Tur;}{\f1201\fswiss\fcharset186\fprq2 Century Gothic Baltic;}
{\f1204\froman\fcharset238\fprq2 Garamond CE;}{\f1205\froman\fcharset204\fprq2 Garamond Cyr;}{\f1207\froman\fcharset161\fprq2 Garamond Greek;}{\f1208\froman\fcharset162\fprq2 Garamond Tur;}{\f1211\froman\fcharset186\fprq2 Garamond Baltic;}
{\f1214\fswiss\fcharset238\fprq2 Haettenschweiler CE;}{\f1215\fswiss\fcharset204\fprq2 Haettenschweiler Cyr;}{\f1217\fswiss\fcharset161\fprq2 Haettenschweiler Greek;}{\f1218\fswiss\fcharset162\fprq2 Haettenschweiler Tur;}
{\f1221\fswiss\fcharset186\fprq2 Haettenschweiler Baltic;}{\f1226\fmodern\fcharset0\fprq1 @MS Mincho Western;}{\f1224\fmodern\fcharset238\fprq1 @MS Mincho CE;}{\f1225\fmodern\fcharset204\fprq1 @MS Mincho Cyr;}
{\f1227\fmodern\fcharset161\fprq1 @MS Mincho Greek;}{\f1228\fmodern\fcharset162\fprq1 @MS Mincho Tur;}{\f1231\fmodern\fcharset186\fprq1 @MS Mincho Baltic;}{\f1244\fscript\fcharset238\fprq2 Monotype Corsiva CE;}
{\f1245\fscript\fcharset204\fprq2 Monotype Corsiva Cyr;}{\f1247\fscript\fcharset161\fprq2 Monotype Corsiva Greek;}{\f1248\fscript\fcharset162\fprq2 Monotype Corsiva Tur;}{\f1251\fscript\fcharset186\fprq2 Monotype Corsiva Baltic;}
{\f1256\fnil\fcharset0\fprq2 @SimSun Western;}{\f1324\fdecor\fcharset238\fprq2 Creepy CE;}{\f1328\fdecor\fcharset162\fprq2 Creepy Tur;}{\f1344\fswiss\fcharset238\fprq2 EraserDust CE;}{\f1348\fswiss\fcharset162\fprq2 EraserDust Tur;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;
\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green0\blue200;\red200\green0\blue0;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang2057\langfe2057\cgrid\langnp2057\langfenp2057 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f1\fs24\lang2057\langfe2057\cgrid\langnp2057\langfenp2057 \snext15 \styrsid12267034 Normal Text;}}{\*\revtbl {Unknown;}}{\*\rsidtbl \rsid80897\rsid1574944\rsid9991177\rsid12267034\rsid15274402}{\*\generator Microsoft Word 10.0.2627;}{\info{\title FRAME SCRIPT}
{\author Danny Kodicek}{\operator Danny Kodicek}{\creatim\yr2005\mo1\dy19\min19}{\revtim\yr2005\mo1\dy19\min19}{\version2}{\edmins1}{\nofpages52}{\nofwords8045}{\nofchars45862}{\nofcharsws53800}{\vern16437}}
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\viewzk2\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct\asianbrkrule\rsidroot80897 \fet0\sectd 
\linex0\sectdefaultcl\sectrsid15274402\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \s15\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid12267034 
\f1\fs24\lang2057\langfe2057\cgrid\langnp2057\langfenp2057 {\b\f5\fs36\ul\insrsid12267034\charrsid12267034 FRAME SCRIPT
\par }{\f5\cf17\insrsid12267034 
\par property}{\f5\insrsid12267034  prunning
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pobjlist
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  plasttime
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  exitframe}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034   go}{\f5\cf17\insrsid12267034  the}{\f5\cf11\insrsid12267034  frame}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\cf11\insrsid12267034  voidp}{\f5\insrsid12267034 (pobjlist)}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par     pobjlist=[}{\f5\cf11\insrsid12267034 #fixed}{\f5\insrsid12267034 :[],}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 movable:[]]
\par }{\f5\cf11\insrsid12267034     sendallsprites}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 addobjects,pobjlist)
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  enterFrame}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 --! check for collisions and move objects (this is part of the frame script)
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  prunning}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- calculate time since last frame
\par }{\f5\insrsid12267034     t=(}{\f5\cf17\insrsid12267034 the}{\f5\cf11\insrsid12267034  milliseconds}{\f5\insrsid12267034 -plasttime)/}{\f5\cf15\insrsid12267034 1000.0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     if}{\f5\insrsid12267034  t>}{\f5\cf15\insrsid12267034 0.1}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  t=}{\f5\cf15\insrsid12267034 0.1}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- lock to 10fps minimum

\par }{\f5\insrsid12267034     fullt=t
\par     plasttime=}{\f5\cf17\insrsid12267034 the}{\f5\cf11\insrsid12267034  milliseconds}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- repeat until no more collisions found
\par }{\f5\cf17\insrsid12267034     repeat while true}{\f5\insrsid12267034 
\par       mn=}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 
\par       ob1=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par       ob2=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par       }{\f5\cf18\insrsid12267034 -- repeat for each movable object
\par }{\f5\cf17\insrsid12267034       repeat with}{\f5\insrsid12267034  i=pobjlist.movable.}{\f5\cf11\insrsid12267034 count down}{\f5\cf17\insrsid12267034  to}{\f5\cf15\insrsid12267034  1}{\f5\insrsid12267034 
\par         obj1=pobjlist.movable[i]
\par         }{\f5\cf18\insrsid12267034 -- repeat for each other movable object not yet checked
\par }{\f5\cf17\insrsid12267034         repeat with}{\f5\insrsid12267034  j=i-}{\f5\cf15\insrsid12267034 1}{\f5\cf11\insrsid12267034  down}{\f5\cf17\insrsid12267034  to}{\f5\cf15\insrsid12267034  1}{\f5\insrsid12267034 
\par           obj2=pobjlist.movable[j]
\par           }{\f5\cf18\insrsid12267034 -- if either of them is moving then
\par }{\f5\cf17\insrsid12267034           if}{\f5\insrsid12267034  obj1.isMoving()}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  obj2.isMoving()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par             }{\f5\cf18\insrsid12267034 -- check for collision
\par }{\f5\insrsid12267034             c=obj2.checkcollision(obj1, t)
\par }{\f5\cf17\insrsid12267034             if}{\f5\insrsid12267034  not}{\f5\cf11\insrsid12267034  listp}{\f5\insrsid12267034 (c)}{\f5\cf17\insrsid12267034  then}{\f5\cf11\insrsid12267034  next}{\f5\cf17\insrsid12267034  repeat}{\f5\insrsid12267034  }{
\f5\cf18\insrsid12267034 -- no collision
\par }{\f5\insrsid12267034             }{\f5\cf18\insrsid12267034 -- check to see if collision occurs before any other so far found
\par }{\f5\insrsid12267034             tm=c.t
\par             m=}{\f5\cf11\insrsid12267034 min}{\f5\insrsid12267034 (mn,tm)
\par }{\f5\cf17\insrsid12267034             if}{\f5\insrsid12267034  m<mn}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par               mn=m
\par               col=c
\par               ob1=obj1
\par               ob2=obj2
\par }{\f5\cf17\insrsid12267034               if}{\f5\insrsid12267034  tm=}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- immediate collision, don't bother checking any more
\par }{\f5\cf11\insrsid12267034                 exit}{\f5\cf17\insrsid12267034  repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034               end if}{\f5\insrsid12267034 
\par               
\par }{\f5\cf17\insrsid12267034             end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034           end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034         end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034         if}{\f5\insrsid12267034  mn=}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\cf11\insrsid12267034  exit}{\f5\cf17\insrsid12267034  repeat}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 
-- immediate collision - skip the rest of the loop
\par }{\f5\cf17\insrsid12267034         if}{\f5\insrsid12267034  obj1.ismoving()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par           }{\f5\cf18\insrsid12267034 -- check for collision with fixed objects
\par }{\f5\cf17\insrsid12267034           repeat with}{\f5\insrsid12267034  j=pobjlist.}{\f5\cf11\insrsid12267034 fixed}{\f5\insrsid12267034 .}{\f5\cf11\insrsid12267034 count down}{\f5\cf17\insrsid12267034  to}{\f5\cf15\insrsid12267034  1}{\f5\insrsid12267034 

\par             obj2=pobjlist.}{\f5\cf11\insrsid12267034 fixed}{\f5\insrsid12267034 [j]
\par             c=obj2.checkcollision(obj1, t)
\par }{\f5\cf17\insrsid12267034             if}{\f5\insrsid12267034  not}{\f5\cf11\insrsid12267034  listp}{\f5\insrsid12267034 (c)}{\f5\cf17\insrsid12267034  then}{\f5\cf11\insrsid12267034  next}{\f5\cf17\insrsid12267034  repeat}{\f5\insrsid12267034  }{
\f5\cf18\insrsid12267034 -- no collision
\par }{\f5\insrsid12267034             }{\f5\cf18\insrsid12267034 -- check to see if collision occurs before any other so far found
\par }{\f5\insrsid12267034             tm=c.t
\par             m=}{\f5\cf11\insrsid12267034 min}{\f5\insrsid12267034 (mn,tm)
\par }{\f5\cf17\insrsid12267034             if}{\f5\insrsid12267034  m<mn}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par               mn=m
\par               col=c
\par               ob1=obj1
\par               ob2=obj2
\par }{\f5\cf17\insrsid12267034               if}{\f5\insrsid12267034  tm=}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- immediate collision, don't bother checking any more
\par }{\f5\cf11\insrsid12267034                 exit}{\f5\cf17\insrsid12267034  repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034               end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034             end if}{\f5\insrsid12267034 
\par             
\par }{\f5\cf17\insrsid12267034           end repeat}{\f5\insrsid12267034 
\par           
\par }{\f5\cf17\insrsid12267034         end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034       end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034       if}{\f5\insrsid12267034  mn=}{\f5\cf15\insrsid12267034 2}{\f5\cf17\insrsid12267034  then}{\f5\cf11\insrsid12267034  exit}{\f5\cf17\insrsid12267034  repeat}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 
-- no collision in time period
\par }{\f5\cf17\insrsid12267034       if}{\f5\insrsid12267034  mn>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par         }{\f5\cf18\insrsid12267034 -- move all objects to the correct position
\par }{\f5\cf17\insrsid12267034         repeat with}{\f5\insrsid12267034  obj}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  pobjlist.movable
\par }{\f5\cf17\insrsid12267034           if}{\f5\insrsid12267034  obj=ob1}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  obj=ob2}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  obj.movebytime(mn*t*}{\f5\cf15\insrsid12267034 0.95}{
\f5\insrsid12267034 ) }{\f5\cf18\insrsid12267034 -- keep them at a slight distance
\par }{\f5\cf17\insrsid12267034           else}{\f5\insrsid12267034  obj.movebytime(mn*t)
\par }{\f5\cf17\insrsid12267034         end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034       end if}{\f5\insrsid12267034 
\par       }{\f5\cf18\insrsid12267034 -- inelastic collisions (not fully implemented yet)
\par }{\f5\insrsid12267034       e1=ob1.getefficiency()
\par       e2=ob2.getefficiency()
\par       eff=e1*e2
\par       }{\f5\cf18\insrsid12267034 -- ensure that ob1 is moving (at least)
\par }{\f5\cf17\insrsid12267034       if}{\f5\insrsid12267034  ob1.isfixed()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par }{\f5\cf17\insrsid12267034         set}{\f5\insrsid12267034  o}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  ob1
\par }{\f5\cf17\insrsid12267034         set}{\f5\insrsid12267034  ob1}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  ob2
\par }{\f5\cf17\insrsid12267034         set}{\f5\insrsid12267034  ob2}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  o
\par }{\f5\cf17\insrsid12267034       end if}{\f5\insrsid12267034 
\par       n=col.}{\f5\cf11\insrsid12267034 normal}{\f5\insrsid12267034 
\par       }{\f5\cf18\insrsid12267034 -- resolve collision appropriately
\par }{\f5\cf17\insrsid12267034       if}{\f5\insrsid12267034  ob2.isfixed()}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  ob1.fixedAngular()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par         resolveCollisionFixed(ob1, n)
\par         
\par }{\f5\cf17\insrsid12267034       else if}{\f5\insrsid12267034  ob2.fixedAngular()}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  ob1.fixedAngular()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034   
\par         resolveCollisionFree(ob1, ob2, n)
\par }{\f5\cf17\insrsid12267034       else}{\f5\insrsid12267034  
\par         }{\f5\cf18\insrsid12267034 -- for angular collisions, calculate the correct moments 
\par }{\f5\insrsid12267034         }{\f5\cf18\insrsid12267034 -- (moments returned by the collision detection functions
\par }{\f5\insrsid12267034         }{\f5\cf18\insrsid12267034 -- are relative to the child object, but we need the moment
\par }{\f5\insrsid12267034         }{\f5\cf18\insrsid12267034 -- relative to the parent).
\par }{\f5\insrsid12267034         ax2=col.ref2.getAxis()
\par         ax1=col.ref1.getAxis()
\par         
\par         }{\f5\cf18\insrsid12267034 -- check which object is ref1 and which is ref2 
\par }{\f5\insrsid12267034         }{\f5\cf18\insrsid12267034 -- (again, ref1 and ref2 are the child objects, 
\par }{\f5\insrsid12267034         }{\f5\cf18\insrsid12267034 -- so we need to find their parents)
\par }{\f5\cf17\insrsid12267034         if}{\f5\insrsid12267034  col.ref2.getParent()=ob2}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par           resolveAngularCollision(ob1, ob2, n, -clockwiseNormal(col.moment1+ax1), clockwiseNormal(col.moment2+ax2))
\par }{\f5\cf17\insrsid12267034         else}{\f5\insrsid12267034 
\par           resolveAngularCollision(ob2, ob1, n, -clockwiseNormal(col.moment1+ax1), clockwiseNormal(col.moment2+ax2))
\par }{\f5\cf17\insrsid12267034         end if}{\f5\insrsid12267034  
\par }{\f5\cf17\insrsid12267034       end if}{\f5\insrsid12267034 
\par       }{\f5\cf18\insrsid12267034 -- reduce t and repeat
\par }{\f5\insrsid12267034       t=t*(}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 -mn)
\par       
\par       }{\f5\cf18\insrsid12267034 -- allow for break in case of an infinite loop (shouldn't happen
\par }{\f5\insrsid12267034       }{\f5\cf18\insrsid12267034 -- but still occasionally does)
\par }{\f5\cf17\insrsid12267034       if}{\f5\cf11\insrsid12267034  keypressed}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 return}{\f5\insrsid12267034 )}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par         prunning=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034         sendallsprites}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 togglesim)
\par }{\f5\cf11\insrsid12267034         exit}{\f5\cf17\insrsid12267034  repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034       end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     end repeat}{\f5\insrsid12267034 
\par     
\par     }{\f5\cf18\insrsid12267034 -- finally, move all objects according to the remaining time.
\par }{\f5\cf17\insrsid12267034     repeat with}{\f5\insrsid12267034  obj}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  pobjlist.movable
\par       obj.movebytime(t)
\par }{\f5\cf17\insrsid12267034     end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  mousedown}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034   sendallsprites}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 deselect)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  keydown}{\f5\insrsid12267034  
\par   }{\f5\cf18\insrsid12267034 -- detect key press to start and stop the simulation
\par }{\f5\cf17\insrsid12267034   if the}{\f5\cf11\insrsid12267034  key}{\f5\insrsid12267034 =}{\f5\cf17\insrsid12267034 return then}{\f5\insrsid12267034  
\par }{\f5\cf17\insrsid12267034     if}{\f5\insrsid12267034  prunning=}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par       prunning=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par       plasttime=}{\f5\cf17\insrsid12267034 the}{\f5\cf11\insrsid12267034  milliseconds}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     else}{\f5\insrsid12267034 
\par       prunning=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     end if}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034     sendallsprites}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 togglesim)
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par }{\insrsid12267034 \page }{\b\f2\fs36\ul\insrsid12267034 \lquote S}{\b\f2\fs36\ul\insrsid12267034\charrsid12267034 IMULATION SHAPE}{\b\f2\fs36\ul\insrsid12267034 \rquote }{\b\f2\fs36\ul\insrsid12267034\charrsid12267034  BEHAVIOR
\par }{\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pshapetype
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pprop1
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pprop2
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  psprite
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pmember
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  parrow
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  parrowmem
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  parrowreg
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pimage
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pselimage
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  ploc,pstartloc
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pfixedlinear
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pfixedangular
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pvelocity
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pspeed
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  protation
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  protdirection
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pangspeed
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pcollisiontype
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pselectable
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pmoving
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pdrag
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  poffset
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pselected
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pboundingshape
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pmass
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pMOI }{\f5\cf18\insrsid12267034 -- moment of inertia
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pefficiency
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pdegtorad
\par 
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\cf11\insrsid12267034  ancestor}{\f5\insrsid12267034 
\par 
\par }{\f5\cf18\insrsid12267034 ----------- This behaviour is attached to all shapes in the simulation
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  getpropertydescriptionlist}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034  
\par   }{\f5\cf18\insrsid12267034 -- User-defined parameters
\par }{\f5\insrsid12267034   l=[:]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pshapetype]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Shape type"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 Circle,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #symbol}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #range}{\f5\insrsid12267034 :[}{\f5\cf11\insrsid12267034 #}
{\f5\insrsid12267034 Circle,}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 Rectangle,}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 Linesegment,}{\f5\cf11\insrsid12267034 #Particle}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #}{
\f5\insrsid12267034 aaRectangle]]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pfixedlinear]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Fixed linearly?"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf17\insrsid12267034 false}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #boolean}{\f5\insrsid12267034 ]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pfixedangular]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Fixed angularly?"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}
{\f5\cf17\insrsid12267034 true}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #boolean}{\f5\insrsid12267034 ]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pcollisiontype]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Collision type"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 Outside,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #symbol}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #range}{\f5\insrsid12267034 :[}{\f5\cf11\insrsid12267034 #
}{\f5\insrsid12267034 Outside,}{\f5\cf11\insrsid12267034 #Inside}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #Both}{\f5\insrsid12267034 ]]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pboundingshape]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Bounding shape"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf11\insrsid12267034 #None}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #symbol}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #range}{\f5\insrsid12267034 :[}{\f5\cf11\insrsid12267034 
#None}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 Circle,}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 AABB,}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 OABB]]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pprop1]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Dimension 1"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf15\insrsid12267034 30}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #integer}{\f5\insrsid12267034 ]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pprop2]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Dimension 2"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf15\insrsid12267034 30}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #integer}{\f5\insrsid12267034 ]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pmass]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Mass"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf15\insrsid12267034 10}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #float}{\f5\insrsid12267034 ]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pefficiency]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Efficiency"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #float}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #range}{\f5\insrsid12267034 :[}{\f5\cf11\insrsid12267034 #min}{
\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #max}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ]]
\par   l[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 pselectable]=[}{\f5\cf11\insrsid12267034 #comment}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 "Selectable?"}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #default}{\f5\insrsid12267034 :}{
\f5\cf17\insrsid12267034 true}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #format}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #boolean}{\f5\insrsid12267034 ]
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  l
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  beginsprite}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- initialize shape
\par }{\f5\insrsid12267034   psprite=}{\f5\cf11\insrsid12267034 sprite}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .}{\f5\cf11\insrsid12267034 spritenum}{\f5\insrsid12267034 )
\par   psprite.}{\f5\cf11\insrsid12267034 visible}{\f5\insrsid12267034 =}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- create a new cast member to hold the shape image
\par }{\f5\insrsid12267034   pmember=}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 #bitmap}{\f5\insrsid12267034 ) 
\par   psprite.}{\f5\cf11\insrsid12267034 member}{\f5\insrsid12267034 =pmember
\par   }{\f5\cf18\insrsid12267034 -- for an object which is not fixed linearly, show the direction arrow
\par }{\f5\insrsid12267034   parrow=}{\f5\cf11\insrsid12267034 sprite}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .}{\f5\cf11\insrsid12267034 spritenum}{\f5\insrsid12267034 +}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 )

\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pfixedlinear}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  parrow.}{\f5\cf11\insrsid12267034 visible}{\f5\insrsid12267034 =}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034 
\par     parrow.}{\f5\cf11\insrsid12267034 visible}{\f5\insrsid12267034 =}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par     parrowmem=}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 #bitmap}{\f5\insrsid12267034 )
\par     parrowmem.}{\f5\cf11\insrsid12267034 image}{\f5\insrsid12267034 =parrow.}{\f5\cf11\insrsid12267034 member}{\f5\insrsid12267034 .}{\f5\cf11\insrsid12267034 image}{\f5\insrsid12267034 .}{\f5\cf11\insrsid12267034 duplicate}{\f5\insrsid12267034 ()
\par     parrowreg=parrowmem.}{\f5\cf11\insrsid12267034 regpoint}{\f5\insrsid12267034 
\par     parrow.}{\f5\cf11\insrsid12267034 member}{\f5\insrsid12267034 =parrowmem
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   
\par   }{\f5\cf18\insrsid12267034 -- this is to allow quick conversion between degrees and radians
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- (Director's 'rotation' property for sprites is calculated in
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- degrees)
\par }{\f5\insrsid12267034   pdegtorad=}{\f5\cf11\insrsid12267034 pi}{\f5\insrsid12267034 /}{\f5\cf15\insrsid12267034 180}{\f5\insrsid12267034  
\par   
\par   }{\f5\cf18\insrsid12267034 -- override angular fix settings for symmetrical shapes
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pshapetype=}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 circle}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  pshapetype=}{\f5\cf11\insrsid12267034 #particle}{\f5\cf17\insrsid12267034  then}{
\f5\insrsid12267034  pfixedangular=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   
\par   ploc=psprite.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 
\par   parrow.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 =ploc
\par   pselected=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par   
\par   }{\f5\cf18\insrsid12267034 -- set bounding shapes
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- all objects which are not fixed angularly are given a circular bounding shape
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- whose radius is the 'radius' of the shape
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pfixedAngular}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  pboundingshape=}{\f5\cf11\insrsid12267034 #none}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  pboundingshape=}{
\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 circle
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pboundingshape=}{\f5\cf11\insrsid12267034 #none}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par     }{\f5\cf18\insrsid12267034 -- for unbounded shapes, set the shape ancestor directly
\par }{\f5\cf11\insrsid12267034     ancestor}{\f5\insrsid12267034 =}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Shape"}{\f5\insrsid12267034 &&pshapetype).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (}{
\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , [pcollisiontype,pprop1,pprop2])
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- for bounded shapes, set the ancestor to the bounding shape
\par }{\f5\cf17\insrsid12267034     case}{\f5\insrsid12267034  pboundingshape}{\f5\cf17\insrsid12267034  of}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034       #}{\f5\insrsid12267034 circle:
\par         sc=}{\f5\cf15\insrsid12267034 "Shape circle"}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034       #}{\f5\insrsid12267034 OABB:
\par         sc=}{\f5\cf15\insrsid12267034 "Shape rectangle"}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034       #}{\f5\insrsid12267034 AABB:
\par         sc=}{\f5\cf15\insrsid12267034 "Shape aaRectangle"}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     end case}{\f5\insrsid12267034 
\par     pcollisiontype=}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 Outside }{\f5\cf18\insrsid12267034 -- all bounding shapes collide outside
\par }{\f5\cf11\insrsid12267034     ancestor}{\f5\insrsid12267034 =}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (sc).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , [}{
\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 Outside,pprop1,pprop2], pshapetype)
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   
\par   }{\f5\cf18\insrsid12267034 -- create image of shape, and image when selected
\par }{\f5\insrsid12267034   pimage=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .drawimage()
\par   pselimage=}{\f5\cf11\insrsid12267034 image}{\f5\insrsid12267034 (pimage.}{\f5\cf11\insrsid12267034 width}{\f5\insrsid12267034 +}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 , pimage.}{\f5\cf11\insrsid12267034 height}{\f5\insrsid12267034 +}{
\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 ,pimage.}{\f5\cf11\insrsid12267034 depth}{\f5\insrsid12267034 )
\par   pselimage.}{\f5\cf11\insrsid12267034 copypixels}{\f5\insrsid12267034 (pimage,pimage.}{\f5\cf11\insrsid12267034 rect}{\f5\insrsid12267034 +}{\f5\cf11\insrsid12267034 rect}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,}{
\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ),pimage.}{\f5\cf11\insrsid12267034 rect}{\f5\insrsid12267034 )
\par   pselimage.}{\f5\cf11\insrsid12267034 draw}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 point}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ),}{\f5\cf11\insrsid12267034 
point}{\f5\insrsid12267034 (pselimage.}{\f5\cf11\insrsid12267034 width}{\f5\insrsid12267034 -}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,pselimage.}{\f5\cf11\insrsid12267034 height}{\f5\insrsid12267034 -}{\f5\cf15\insrsid12267034 1}{
\f5\insrsid12267034 ),[}{\f5\cf11\insrsid12267034 #shapetype}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #rect}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #linesize}{\f5\insrsid12267034 :}{\f5\cf15\insrsid12267034 3}{\f5\insrsid12267034 ,}{
\f5\cf11\insrsid12267034 #color}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 rgb}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 255}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 255}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{
\f5\insrsid12267034 )])
\par   pmember.}{\f5\cf11\insrsid12267034 image}{\f5\insrsid12267034 =pimage
\par   
\par   }{\f5\cf18\insrsid12267034 -- calculate initial speed, angular speed etc
\par }{\f5\insrsid12267034   pvelocity=}{\f5\cf11\insrsid12267034 point}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 )
\par   pspeed=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par   protation=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pfixedangular}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par     pangspeed=}{\f5\cf15\insrsid12267034 30}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  pangspeed=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par   protdirection=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   
\par   }{\f5\cf18\insrsid12267034 -- use the shape info to calculate the moment of inertia
\par }{\f5\insrsid12267034   pMOI=pmass*}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getMOIfactor()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  addobjects}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , l
\par   }{\f5\cf18\insrsid12267034 -- add the object to either the fixed or movable list for the frame script
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pfixedlinear}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  pfixedangular}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  l.}{\f5\cf11\insrsid12267034 fixed}{\f5\insrsid12267034 .}{
\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  l.movable.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  endsprite}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- clean up when ending
\par }{\f5\cf11\insrsid12267034   erase}{\f5\insrsid12267034  pmember
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pfixedlinear}{\f5\cf17\insrsid12267034  then}{\f5\cf11\insrsid12267034  erase}{\f5\insrsid12267034  parrowmem
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf18\insrsid12267034 ---------------- Drag functions for initial setup
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  mousedown}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pselectable}{\f5\cf17\insrsid12267034  then me}{\f5\insrsid12267034 .startdrag()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  mouseup}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   me}{\f5\insrsid12267034 .stopdrag()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  mouseupoutside}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   me}{\f5\insrsid12267034 .stopdrag()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  startdrag}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   pdrag=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   poffset=}{\f5\cf17\insrsid12267034 the}{\f5\cf11\insrsid12267034  clickloc}{\f5\insrsid12267034 -psprite.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034   sendallsprites}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 deselect)
\par }{\f5\cf17\insrsid12267034   me}{\f5\insrsid12267034 .select()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  stopdrag}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pdrag}{\f5\cf17\insrsid12267034  then}{\f5\cf11\insrsid12267034  exit}{\f5\insrsid12267034 
\par   pdrag=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par   ploc=}{\f5\cf17\insrsid12267034 the}{\f5\cf11\insrsid12267034  mouseloc}{\f5\insrsid12267034 -poffset
\par   psprite.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 =ploc
\par   parrow.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 =ploc
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  select}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   pselected=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   pmember.}{\f5\cf11\insrsid12267034 image}{\f5\insrsid12267034 =pselimage
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  deselect}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pselected}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     pselected=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par     pmember.}{\f5\cf11\insrsid12267034 image}{\f5\insrsid12267034 =pimage
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  exitframe}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pmoving}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034     nothing}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else if}{\f5\insrsid12267034  pdrag}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     ploc=}{\f5\cf17\insrsid12267034 the}{\f5\cf11\insrsid12267034  mouseloc}{\f5\insrsid12267034 -poffset
\par     psprite.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 =ploc
\par     parrow.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 =ploc
\par }{\f5\cf17\insrsid12267034   else if}{\f5\insrsid12267034  pselected}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     if}{\f5\insrsid12267034  not pfixedlinear}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par       r=}{\f5\cf11\insrsid12267034 keypressed}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 124}{\f5\insrsid12267034 )-}{\f5\cf11\insrsid12267034 keypressed}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 123}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034       if}{\f5\insrsid12267034  r<>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par         pvelocity=rotateVector(pvelocity,}{\f5\cf15\insrsid12267034 5}{\f5\insrsid12267034 *r)
\par         parrow.}{\f5\cf11\insrsid12267034 rotation}{\f5\insrsid12267034 =parrow.}{\f5\cf11\insrsid12267034 rotation}{\f5\insrsid12267034 +}{\f5\cf15\insrsid12267034 5}{\f5\insrsid12267034 *r
\par }{\f5\cf17\insrsid12267034       end if}{\f5\insrsid12267034 
\par       r=}{\f5\cf11\insrsid12267034 keypressed}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 126}{\f5\insrsid12267034 )-}{\f5\cf11\insrsid12267034 keypressed}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 125}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034       if}{\f5\insrsid12267034  r<>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par         pspeed=}{\f5\cf11\insrsid12267034 max}{\f5\insrsid12267034 (pspeed+r*}{\f5\cf15\insrsid12267034 5}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 )
\par         parrowmem.}{\f5\cf11\insrsid12267034 regpoint}{\f5\insrsid12267034 =parrowreg-}{\f5\cf11\insrsid12267034 point}{\f5\insrsid12267034 (pspeed,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034       end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     if}{\f5\insrsid12267034  not[}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 aaRectangle,}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 circle,}{\f5\cf11\insrsid12267034 #particle}{\f5\insrsid12267034 ].}{
\f5\cf11\insrsid12267034 getOne}{\f5\insrsid12267034 (pshapetype)}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par       r=}{\f5\cf11\insrsid12267034 keypressed}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "x"}{\f5\insrsid12267034 )-}{\f5\cf11\insrsid12267034 keypressed}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "z"}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034       if}{\f5\insrsid12267034  r<>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par         protation=protation+r
\par         psprite.}{\f5\cf11\insrsid12267034 rotation}{\f5\insrsid12267034 =protation
\par }{\f5\cf17\insrsid12267034       end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     end if}{\f5\insrsid12267034     
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  togglesim}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pmoving}{\f5\cf17\insrsid12267034  then me}{\f5\insrsid12267034 .startsim()
\par }{\f5\cf17\insrsid12267034   else me}{\f5\insrsid12267034 .stopsim()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  startsim}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   pmoving=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   pstartloc=ploc
\par }{\f5\cf17\insrsid12267034   me}{\f5\insrsid12267034 .deselect()
\par   parrow.}{\f5\cf11\insrsid12267034 visible}{\f5\insrsid12267034 =}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  stopsim}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   pmoving=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par   psprite.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 =pstartloc
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pfixedlinear}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  parrow.}{\f5\cf11\insrsid12267034 visible}{\f5\insrsid12267034 =}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf18\insrsid12267034 ------------- Movement and other accessor functions
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  movebytime}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , t
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pfixedlinear}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     me}{\f5\insrsid12267034 .setloc(ploc+pvelocity*pspeed*t)
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pfixedangular}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     me}{\f5\insrsid12267034 .setrotation(protation+protdirection*pangspeed*t)
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getloc}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  ploc
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getLocAfter}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , tm
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  ploc+tm*}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getVelocity()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getrotation}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , unit
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  unit=}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 degrees}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  protation
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  protation*pdegtorad
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getmass}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pmass
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getMOI}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pMOI
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getefficiency}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pefficiency
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getvelocity}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pvelocity*pspeed
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getAngularVelocity}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , unit
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  unit=}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 degrees}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  protdirection*pangspeed
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  protdirection*pangspeed*pdegtorad
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getAngularDirection}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  protdirection
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getAxis}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034  
\par   }{\f5\cf18\insrsid12267034 -- For the moment, we're assuming all objects spin 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- about their center of mass
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf11\insrsid12267034  point}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getPerpendicularAxisOffset}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getTangentialAxisOffset}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getaxisdistance}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  centered}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return true}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  setloc}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , lc
\par   ploc=lc
\par   psprite.}{\f5\cf11\insrsid12267034 loc}{\f5\insrsid12267034 =lc
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  setrotation}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , r
\par   protation=constrainangle(r,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 degrees)
\par   psprite.}{\f5\cf11\insrsid12267034 rotation}{\f5\insrsid12267034 =protation
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  setvelocity}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , v
\par   pspeed=mag(v)
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pspeed>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  pvelocity=v/pspeed
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  setangularvelocity}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , v
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  v>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  protdirection=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  protdirection=-}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   pangspeed=}{\f5\cf11\insrsid12267034 abs}{\f5\insrsid12267034 (v)*}{\f5\cf15\insrsid12267034 180}{\f5\insrsid12267034 /}{\f5\cf11\insrsid12267034 pi}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  reverseAngularVelocity}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   protdirection=-protdirection
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getkineticenergy}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not pmoving}{\f5\cf17\insrsid12267034  then return}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pfixedangular}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pspeed*pspeed*pmass/}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 
\par   a=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getAngularVelocity()
\par   ae=a*a*pMOI/}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pfixedlinear}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  ae
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  ae+pspeed*pspeed*pmass/}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getmomentum}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pspeed*pvelocity*pmass
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getAngularMomentum}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , p
\par   }{\f5\cf18\insrsid12267034 -- angular Momentum about a point p (or about axis if p unspecified)
\par }{\f5\cf17\insrsid12267034   if}{\f5\cf11\insrsid12267034  voidp}{\f5\insrsid12267034 (p)}{\f5\cf17\insrsid12267034  then return me}{\f5\insrsid12267034 .getAngularVelocity()*pMOI
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  mag(p)=}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then return me}{\f5\insrsid12267034 .getAngularVelocity()*pMOI
\par   v=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getVelocity()
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  v*moment(v,p)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  isfixed}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pfixedlinear}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  pfixedangular
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  fixtype}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pfixedlinear}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  pfixedangular}{\f5\cf17\insrsid12267034  then return}{\f5\cf11\insrsid12267034  #fixed}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pfixedlinear}{\f5\cf17\insrsid12267034  then return}{\f5\cf11\insrsid12267034  #linear}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pfixedangular}{\f5\cf17\insrsid12267034  then return}{\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 angular
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf11\insrsid12267034  #free}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  fixedAngular}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pfixedAngular
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  fixedLinear}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pfixedLinear
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  ismoving}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pspeed>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  pangspeed>}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  spinning}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- note that although a bounded object can be rotating, its
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- bounding circle is not, so this returns 0. This needs
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- to be updated to deal with OABBs
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pangspeed>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  not}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .isbounded()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par 
\par }{\f5\cf18\insrsid12267034 ---------------- methods for finding children / parents
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  isreference}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034  ref}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 =}{\f5\cf11\insrsid12267034 ref}{\f5\cf17\insrsid12267034  then return true}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .isbounded()}{\f5\cf17\insrsid12267034  then return me}{\f5\insrsid12267034 .trueshape().isreference(}{\f5\cf11\insrsid12267034 ref}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034   return false}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getParent}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end
\par \page }{\b\f5\fs36\ul\insrsid12267034 \lquote C}{\b\f5\fs36\ul\insrsid12267034\charrsid12267034 HILD SHAPE}{\b\f5\fs36\ul\insrsid12267034 \rquote }{\b\f5\fs36\ul\insrsid12267034\charrsid12267034  PARENT SCRIPT
\par }{\f5\cf17\insrsid12267034 
\par property}{\f5\insrsid12267034  pparent
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pshapetype
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  poffset
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  protate
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pperpendicularAxisOffset
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  ptangentialAxisOffset
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  paxisdistance
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\cf11\insrsid12267034  ancestor}{\f5\insrsid12267034 
\par 
\par }{\f5\cf18\insrsid12267034 ---------- This script is used for all children: 
\par ---------- bounded shapes and subshapes such as polygon edges
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on new me}{\f5\insrsid12267034 , par, tp, offs, ang, props
\par   pparent=par
\par   pshapetype=tp
\par   
\par   poffset=offs
\par   protate=ang
\par   v=directionVector(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getrotation())
\par   n=clockwiseNormal(v)
\par   pperpendicularAxisOffset=dotProd(n,-}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getaxis()) 
\par   }{\f5\cf18\insrsid12267034 --NB: the above won't work correctly for grandchildren unless 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- at most one of them is offset and not a particle
\par }{\f5\insrsid12267034   ptangentialAxisOffset=dotProd(v,-}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getaxis())
\par   }{\f5\cf18\insrsid12267034 -- This has been set up here but is not used yet and will not do anything:
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- for the moment, all child objects are only offset perpendicular to 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- their center of mass.
\par }{\f5\insrsid12267034   paxisdistance=mag(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getAxis())
\par   }{\f5\cf18\insrsid12267034 -- as with the behavior, we set the ancestor to the correct shape type
\par }{\f5\cf11\insrsid12267034   ancestor}{\f5\insrsid12267034 =}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Shape"}{\f5\insrsid12267034 &&pshapetype).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (}{
\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , props)
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf18\insrsid12267034 ---------- accessor functions (equivalent to those of the behavior)
\par -- NB: child objects can't be moved directly, only via their parent
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getloc}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pparent.getLoc()+rotateVector(poffset, pparent.getRotation())
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getrotation}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , unit
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  unit<>}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 degrees}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  r=protate*}{\f5\cf11\insrsid12267034 pi}{\f5\insrsid12267034 /}{
\f5\cf15\insrsid12267034 180}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  r=protate
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pparent.getRotation(unit)+r
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getvelocity}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pparent.getVelocity()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getangularvelocity}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pparent.getAngularVelocity()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getAngularDirection}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pparent.getAngularDirection()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getAxis}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  rotateVector(pparent.getAxis()-poffset, pparent.getRotation())
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getPerpendicularAxisOffset}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pperpendicularAxisOffset
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getTangentialAxisOffset}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pperpendicularAxisOffset
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getAxisDistance}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  paxisdistance
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getLocAfter}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , tm
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  axis}{\f5\cf17\insrsid12267034  to me}{\f5\insrsid12267034 .getAxis()
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  startAng}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  angleof(-axis)
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  angDisplacement}{\f5\cf17\insrsid12267034  to me}{\f5\insrsid12267034 .getAngularVelocity()*tm
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  endAng}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  startAng+angDisplacement
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  displacement}{\f5\cf17\insrsid12267034  to me}{\f5\insrsid12267034 .getVelocity()*tm
\par   }{\f5\cf18\insrsid12267034 -- to calculate the position of a child object after a certain time,
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- imagine moving it to the axis, moving it linearly, then moving
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- it back out along the rotated axis
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 .getLoc()+axis+displacement+paxisdistance*directionVector(endAng)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getHorizontal}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   w=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getWidth()
\par   h=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getHeight()
\par   r=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getRotation()
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  w*}{\f5\cf11\insrsid12267034 cos}{\f5\insrsid12267034 (r)+h*}{\f5\cf11\insrsid12267034 sin}{\f5\insrsid12267034 (r)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getvertical}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   w=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getWidth()
\par   h=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getHeight()
\par   r=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getRotation()
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  w*}{\f5\cf11\insrsid12267034 sin}{\f5\insrsid12267034 (r)+h*}{\f5\cf11\insrsid12267034 cos}{\f5\insrsid12267034 (r)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  spinning}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 .getAngularVelocity()<>}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034  
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  centered}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pperpendicularAxisOffset=}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  ptangentialAxisOffset=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  fixtype}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pparent.fixtype()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  isreference}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034  ref}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 =}{\f5\cf11\insrsid12267034 ref}{\f5\cf17\insrsid12267034  then return true}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .isbounded()}{\f5\cf17\insrsid12267034  then return me}{\f5\insrsid12267034 .trueshape.isreference(}{\f5\cf11\insrsid12267034 ref}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034   return false}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getParent}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pparent.getParent()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  ismoving}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pparent.ismoving() 
\par }{\f5\cf17\insrsid12267034 end
\par \page }{\b\f5\fs36\ul\insrsid12267034 \lquote SHAPE CIRCLE\rquote  PARENT SCRIPT}{\b\f5\fs36\ul\insrsid12267034\charrsid12267034 
\par }{\f5\cf17\insrsid12267034 
\par property}{\f5\insrsid12267034  pradius
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pcollisiontype
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pbounding
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pbounded
\par 
\par }{\f5\cf18\insrsid12267034 -- Ancestor for all circular shapes (including bounding circles)
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on new me}{\f5\insrsid12267034 , par, props, bounding
\par   }{\f5\cf18\insrsid12267034 -- props: [collisionType, radius]
\par }{\f5\cf17\insrsid12267034   if}{\f5\cf11\insrsid12267034  symbolp}{\f5\insrsid12267034 (bounding)}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- bounding shape, bounding is the circumscribed shape type
\par }{\f5\insrsid12267034     pbounding=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- create a child object to be the bounded shape
\par }{\f5\insrsid12267034     pbounded=}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par, bounding,}{\f5\cf11\insrsid12267034  point
}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ),}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 , props)
\par     pcollisiontype=}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 outside
\par     pradius=pbounded.getRadius()
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034 
\par     pbounding=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par     pcollisiontype=props[}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ]
\par     pradius=props[}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 ]
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  checkcollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , obj, t
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  obj.spinning()}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  obj.spinningCollision(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , t)
\par   }{\f5\cf18\insrsid12267034 -- NB: this circular object can't be spinning 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- so we don't need to check for it
\par }{\f5\insrsid12267034   r=}{\f5\cf11\insrsid12267034 #none}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- pass collision along to relevant object
\par }{\f5\cf17\insrsid12267034   case}{\f5\insrsid12267034  obj.}{\f5\cf11\insrsid12267034 shapetype}{\f5\insrsid12267034 ()}{\f5\cf17\insrsid12267034  of}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 Circle:
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .circleCollision(obj, t)
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 Rectangle,}{\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 aaRectangle:
\par       r= obj.circleCollision(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , t)
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 Linesegment:
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .lineCollision(obj, t)
\par }{\f5\cf11\insrsid12267034     #Particle}{\f5\insrsid12267034 :
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .particleCollision(obj, t)
\par }{\f5\cf17\insrsid12267034   end case}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- if no collision, or both objects are unbounded, then we're done
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  r=}{\f5\cf11\insrsid12267034 #none}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  not (pbounding}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  obj.isbounded())}{\f5\cf17\insrsid12267034 
 then return}{\f5\insrsid12267034  r
\par   }{\f5\cf18\insrsid12267034 -- otherwise, if either one is bounded then check collision with the true shape
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- this will occur if the result of the collision check was a t-value or a 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- symbol such as #inside or #overlap
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pbounded.checkCollision(obj,t)
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 .checkCollision(obj.trueshape(),t)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf18\insrsid12267034 ------------ accessor functions
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getRadius}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pradius
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getWidth}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pradius
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getHeight}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pradius
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  collidesinside}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  (pcollisiontype<>}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 outside)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  collidesoutside}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  (pcollisiontype<>}{\f5\cf11\insrsid12267034 #inside}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  collidesboth}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  (pcollisiontype=}{\f5\cf11\insrsid12267034 #both}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  shapetype}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 circle
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  isbounded}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pbounding
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  trueshape}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pbounded
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getMOIfactor}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- multiply mass by this factor to get the moment of inertia
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pbounded.getMOIfactor()
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf15\insrsid12267034  0.5}{\f5\insrsid12267034 *}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getRadius()*}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getRadius()
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  drawimage}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par     }{\f5\cf18\insrsid12267034 -- draw the bounded shape
\par }{\f5\cf17\insrsid12267034     return}{\f5\insrsid12267034  pbounded.drawImage()
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   im=}{\f5\cf11\insrsid12267034 image}{\f5\insrsid12267034 (pradius*}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 ,pradius*}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 16}{\f5\insrsid12267034 )
\par   im.}{\f5\cf11\insrsid12267034 fill}{\f5\insrsid12267034 (im.}{\f5\cf11\insrsid12267034 rect}{\f5\insrsid12267034 ,[}{\f5\cf11\insrsid12267034 #shapetype}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #oval}{\f5\insrsid12267034 ,}{
\f5\cf11\insrsid12267034 #color}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 rgb}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 random}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 255}{\f5\insrsid12267034 ),}{\f5\cf11\insrsid12267034 random}{
\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 255}{\f5\insrsid12267034 ),}{\f5\cf11\insrsid12267034 random}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 255}{\f5\insrsid12267034 ))])
\par   im.}{\f5\cf11\insrsid12267034 draw}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 rect}{\f5\insrsid12267034 (pradius-}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,pradius-}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,pradius+}{
\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,pradius+}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ),[}{\f5\cf11\insrsid12267034 #shapetype}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #oval}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 
#color}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 rgb}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 )])
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  im
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  pointInside}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , pt
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  (mag(pt-}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getLoc())<pradius)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf18\insrsid12267034 --------- Collisions (PRIVATE methods: public access only through checkCollision)
\par }{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  particleCollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , pt, tm, offsetRadius
\par   }{\f5\cf18\insrsid12267034 -- offsetRadius allows this function to deal with 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- circle-circle collisions too - positive for an external
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- collision, negative for an internal one
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- pt can be either a particle object or a pure point
\par }{\f5\cf17\insrsid12267034   if}{\f5\cf11\insrsid12267034  voidp}{\f5\insrsid12267034 (offsetRadius)}{\f5\cf17\insrsid12267034  then set}{\f5\insrsid12267034  offsetRadius}{\f5\cf17\insrsid12267034  to}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 

\par   }{\f5\cf18\insrsid12267034 -- calculate relative velocity and initial displacement
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- (we're going to assume the circle is stationary at the origin)
\par }{\f5\cf17\insrsid12267034   if ilk}{\f5\insrsid12267034 (pt,}{\f5\cf11\insrsid12267034  #point}{\f5\insrsid12267034 )}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  relVelocity}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  -}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getvelocity()
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  separation}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  pt-}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getLoc()
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  relVelocity}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  pt.getvelocity()-}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getvelocity()
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  separation}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  pt.getLoc()-}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getLoc()
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- calculate displacement during time period
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  displacement}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  relVelocity*tm
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  d}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  mag(separation)
\par }{\f5\cf17\insrsid12267034   set}{\f5\cf11\insrsid12267034  radius}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  pradius+offsetRadius
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  d<}{\f5\cf11\insrsid12267034 radius}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- particle is inside the circle
\par }{\f5\cf17\insrsid12267034     if}{\f5\insrsid12267034  not}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .collidesinside()}{\f5\cf17\insrsid12267034  then return}{\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 already
\par     checkInside=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034 
\par     checkInside=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  a}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  sqmag(displacement)
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  a=}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then return}{\f5\cf11\insrsid12267034  #none}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- no relative motion
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  b}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  dotProd(separation, displacement)
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  b>}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  not checkInside}{\f5\cf17\insrsid12267034  then return}{\f5\cf11\insrsid12267034  #none}{\f5\insrsid12267034  }{
\f5\cf18\insrsid12267034 -- moving apart
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  c}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  sqmag(separation)-}{\f5\cf11\insrsid12267034 radius}{\f5\insrsid12267034 *}{\f5\cf11\insrsid12267034 radius}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  discriminant}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  b*b-a*c
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  discriminant<}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then return}{\f5\cf11\insrsid12267034  #none}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- no collision along path
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  checkInside}{\f5\cf17\insrsid12267034  then set}{\f5\insrsid12267034  t}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  (-b+}{\f5\cf11\insrsid12267034 sqrt}{\f5\insrsid12267034 (discriminant))/a

\par }{\f5\cf17\insrsid12267034   else set}{\f5\insrsid12267034  t}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  (-b-}{\f5\cf11\insrsid12267034 sqrt}{\f5\insrsid12267034 (discriminant))/a
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  t>}{\f5\cf15\insrsid12267034 1}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  t<}{\f5\cf15\insrsid12267034 0}{\f5\cf17\insrsid12267034  then return}{\f5\cf11\insrsid12267034  #none}{
\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- no collision within timeframe
\par }{\f5\insrsid12267034   
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  [}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 t:t,}{\f5\cf11\insrsid12267034 #normal}{\f5\insrsid12267034 :norm(separation+t*displacement),}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 
moment1:}{\f5\cf11\insrsid12267034 point}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ),}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 moment2:}{\f5\cf11\insrsid12267034 
point}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ),}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 ref1:pt,}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 ref2:}{
\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 ]
\par   }{\f5\cf18\insrsid12267034 -- note that particles and circles never have any collision moment: 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- the collision normal is always through the center of mass
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034  
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  circleCollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , cir, tm, checked
\par   }{\f5\cf18\insrsid12267034 -- choose the bigger circle to test
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not checked}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     if}{\f5\insrsid12267034  cir.getRadius()>pradius}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  cir.circleCollision(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , tm,}{\f5\cf15\insrsid12267034  1}{
\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- decide whether to collide inside or outside, then check for a particle collision
\par }{\f5\insrsid12267034   lc=cir.getLoc()
\par   d=mag(lc-}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getLoc())
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  d<(pradius-cir.getRadius())}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- the other circle is inside this one
\par }{\f5\cf17\insrsid12267034     if me}{\f5\insrsid12267034 .collidesInside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034       if}{\f5\insrsid12267034  cir.collidesOutside()}{\f5\cf17\insrsid12267034  then return me}{\f5\insrsid12267034 .particleCollision(cir,tm,-cir.getRadius())
\par }{\f5\cf17\insrsid12267034     end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     return}{\f5\cf11\insrsid12267034  #inside}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else  if}{\f5\insrsid12267034  d<pradius+cir.getRadius()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- overlapping
\par }{\f5\cf17\insrsid12267034     return}{\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 overlap
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     if me}{\f5\insrsid12267034 .collidesOutside()}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  cir.collidesOutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034       return me}{\f5\insrsid12267034 .particleCollision(cir, tm, cir.getRadius())
\par }{\f5\cf17\insrsid12267034     end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf11\insrsid12267034  #none}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  lineCollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , lin, tm, asWall
\par   }{\f5\cf18\insrsid12267034 -- asWall means that we assume the line is infinitely long
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- (useful when checking internal collisions)
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  tlist}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  []
\par   }{\f5\cf18\insrsid12267034 -- check for collision on the flat (only possible for an external collision)
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesOutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (lin.particleCollision(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , tm, asWall, pRadius))
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- check for collision with line endpoints
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034   not asWall}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  lin.checkends()}{\f5\cf17\insrsid12267034   then}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  p1}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  lin.getStartPoint()
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  p2}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  lin.getEndPoint()
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .particleCollision(p1,tm))
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .particleCollision(p2,tm))
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  firstcollision(tlist)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par \page }{\b\f5\fs36\ul\insrsid12267034 \lquote SHAPE RECTANGLE\rquote  PARENT SCRIPT
\par }{\f5\cf17\insrsid12267034 
\par property}{\f5\insrsid12267034  pa, pb }{\f5\cf18\insrsid12267034 -- half-width, half-height
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pxaxis, pyaxis }{\f5\cf18\insrsid12267034 -- direction vectors
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  plastrot
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pcollisiontype
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pwalls
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pvertices
\par 
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pbounding
\par }{\f5\cf17\insrsid12267034 property}{\f5\insrsid12267034  pbounded
\par 
\par }{\f5\cf18\insrsid12267034 -- Ancestor for all orientable rectangles (including OABBs)
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on new me}{\f5\insrsid12267034 , par, props, bounding
\par   }{\f5\cf18\insrsid12267034 -- props: [collisionType, halfWidth, halfHeight]
\par }{\f5\cf17\insrsid12267034   if}{\f5\cf11\insrsid12267034  stringp}{\f5\insrsid12267034 (bounding)}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- bounding shape, bounding is the circumscribed shape type
\par }{\f5\insrsid12267034     pbounding=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- create a child object to be the bounded shape
\par }{\f5\insrsid12267034     pbounded=}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par, bounding,}{\f5\cf11\insrsid12267034  point
}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ),}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 , props)
\par     pcollisiontype=}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 outside
\par     pa=pbounded.getWidth()
\par     pb=pbounded.getHeight()
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034 
\par     pbounding=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par     pcollisiontype=props[}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ]
\par     pa=props[}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 ]
\par     pb=props[}{\f5\cf15\insrsid12267034 3}{\f5\insrsid12267034 ]
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   plastrot=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- keeps track of rotation
\par }{\f5\insrsid12267034   pxaxis=}{\f5\cf11\insrsid12267034 point}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 )
\par   pyaxis=}{\f5\cf11\insrsid12267034 point}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 )
\par   }{\f5\cf18\insrsid12267034 -- create child objects for walls 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- (line segments without endpoints)
\par }{\f5\insrsid12267034   pwalls=[]
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesBoth()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  col=}{\f5\cf11\insrsid12267034 #both}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  col=}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 outside 
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesOutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- clockwise lines: normals face out
\par }{\f5\insrsid12267034     pwalls.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{
\f5\insrsid12267034 (par,}{\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 linesegment, pyaxis*pb,}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 , [col,pa,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{
\f5\insrsid12267034 ]))
\par     pwalls.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 linesegment, pxaxis*pa,}{\f5\cf15\insrsid12267034  270}{\f5\insrsid12267034 , [col,pb,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ]))
\par     pwalls.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 linesegment, -pyaxis*pb,}{\f5\cf15\insrsid12267034  180}{\f5\insrsid12267034 , [col,pa,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ]))
\par     pwalls.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 linesegment, -pxaxis*pa,}{\f5\cf15\insrsid12267034  90}{\f5\insrsid12267034 , [col,pb,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ]))
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  }{\f5\cf18\insrsid12267034 -- anticlockwise lines: normals face in
\par }{\f5\insrsid12267034     pwalls.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{
\f5\insrsid12267034 (par,}{\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 linesegment, pyaxis*pb,}{\f5\cf15\insrsid12267034  180}{\f5\insrsid12267034 , [col,pa,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{
\f5\insrsid12267034 ]))
\par     pwalls.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 linesegment, -pxaxis*pa,}{\f5\cf15\insrsid12267034  270}{\f5\insrsid12267034 , [col,pb,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ]))
\par     pwalls.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 linesegment, -pyaxis*pb,}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 , [col,pa,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ]))
\par     pwalls.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 linesegment, pxaxis*pa,}{\f5\cf15\insrsid12267034  90}{\f5\insrsid12267034 , [col,pb,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ]))
\par     
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- for a rectangle which collides internally, create vertex children
\par }{\f5\insrsid12267034   pvertices=[]
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesoutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     pvertices.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #particle}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034  point}{\f5\insrsid12267034 (pa,pb),}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 , []))
\par     pvertices.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #particle}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034  point}{\f5\insrsid12267034 (-pa,pb),}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 , []))
\par     pvertices.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #particle}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034  point}{\f5\insrsid12267034 (-pa,-pb),}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 , []))
\par     pvertices.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 script}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 "Child shape"}{\f5\insrsid12267034 ).}{\f5\cf17\insrsid12267034 new}{\f5\insrsid12267034 (par,}{
\f5\cf11\insrsid12267034  #particle}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034  point}{\f5\insrsid12267034 (pa,-pb),}{\f5\cf15\insrsid12267034  0}{\f5\insrsid12267034 , []))
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  checkcollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , obj, t
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .spinning()}{\f5\cf17\insrsid12267034  then return me}{\f5\insrsid12267034 .spinningCollision(obj, t)
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  obj.spinning()}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  obj.spinningCollision(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , t)
\par   }{\f5\cf18\insrsid12267034 -- pass collision along to relevant object
\par }{\f5\cf17\insrsid12267034   case}{\f5\insrsid12267034  obj.}{\f5\cf11\insrsid12267034 shapetype}{\f5\insrsid12267034 ()}{\f5\cf17\insrsid12267034  of}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 circle:
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .circleCollision(obj, t)
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 Rectangle:
\par       
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .rectangleCollision(obj, t)
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 Linesegment:
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .lineCollision(obj, t)
\par }{\f5\cf11\insrsid12267034     #Particle}{\f5\insrsid12267034 :
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .particleCollision(obj, t)
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 aaRectangle:
\par       r=obj.rectangleCollision(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 ,t)
\par }{\f5\cf17\insrsid12267034   end case}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- if no collision, or both objects are unbounded, then we're done
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  r=}{\f5\cf11\insrsid12267034 #none}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  not (pbounding}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  obj.isbounded())}{\f5\cf17\insrsid12267034 
 then return}{\f5\insrsid12267034  r
\par   }{\f5\cf18\insrsid12267034 -- otherwise, if either one is bounded then check collision with the true shape
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- this will occur if the result of the collision check was a t-value or a 
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- symbol such as #inside or #overlap
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pbounded.checkCollision(obj,t)
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 .checkCollision(obj.trueshape(),t)
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  spinningCollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , obj, t
\par   }{\f5\cf18\insrsid12267034 -- invoked if the line encounters any other shape while spinning
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- NB: this will only be invoked if the bounding circle is intersected
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  obj.isBounded()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  obj=obj.trueshape()
\par   }{\f5\cf18\insrsid12267034 -- pass collision along to relevant object
\par }{\f5\cf17\insrsid12267034   case}{\f5\insrsid12267034  obj.}{\f5\cf11\insrsid12267034 shapetype}{\f5\insrsid12267034 ()}{\f5\cf17\insrsid12267034  of}{\f5\insrsid12267034 
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 circle:
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .circleCollisionSpin(obj, t)
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 Rectangle:
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .rectangleCollisionSpin(obj, t)
\par }{\f5\cf11\insrsid12267034     #}{\f5\insrsid12267034 Linesegment:
\par       r= obj.rectangleCollisionSpin(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , t)
\par }{\f5\cf11\insrsid12267034     #Particle}{\f5\insrsid12267034 :
\par       r=}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .particleCollisionSpin(obj, t)
\par }{\f5\cf17\insrsid12267034   end case}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  r=}{\f5\cf11\insrsid12267034 #none}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  not (pbounding}{\f5\cf17\insrsid12267034  or}{\f5\insrsid12267034  obj.isbounded())}{\f5\cf17\insrsid12267034 
 then return}{\f5\insrsid12267034  r
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pbounded.checkCollision(obj,t)
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 .spinningCollision(obj.trueshape(),t)
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par 
\par }{\f5\cf18\insrsid12267034 ---------------- Accessor methods
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getWall}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , n
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pwalls[n]
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getWalls}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pwalls
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getvertices}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pvertices
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getXaxis}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- updates plastrot if changed
\par }{\f5\insrsid12267034   r=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getRotation()
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  r=plastrot}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pxaxis
\par   plastrot=r
\par   pxaxis=directionVector(r)
\par   pyaxis=clockwiseNormal(pxaxis)
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pxaxis
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getYaxis}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- updates plastrot if changed
\par }{\f5\insrsid12267034   r=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getRotation()
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  r=plastrot}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pyaxis
\par   plastrot=r
\par   pxaxis=directionVector(r)
\par   pyaxis=clockwiseNormal(pxaxis)
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pyaxis
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getwidth}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- this should probably be replaced by the width of the bounding aabb
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pa
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getheight}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- this should probably be replaced by the height of the bounding aabb
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pb
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getRadius}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- radius of bounding circle
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf11\insrsid12267034  sqrt}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 float}{\f5\insrsid12267034 (pa*pa+pb*pb))
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  collidesinside}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  (pcollisiontype<>}{\f5\cf11\insrsid12267034 #}{\f5\insrsid12267034 outside)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  collidesoutside}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  (pcollisiontype<>}{\f5\cf11\insrsid12267034 #inside}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  collidesboth}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  (pcollisiontype=}{\f5\cf11\insrsid12267034 #both}{\f5\insrsid12267034 )
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  pointInside}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , pt
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  vect}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  pt-}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getLoc()
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  c1}{\f5\cf17\insrsid12267034  to}{\f5\cf11\insrsid12267034  abs}{\f5\insrsid12267034 (component(vect,}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .getXaxis()))
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  c1>pa}{\f5\cf17\insrsid12267034  then return false}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  c2}{\f5\cf17\insrsid12267034  to}{\f5\cf11\insrsid12267034  abs}{\f5\insrsid12267034 (component(vect, pyaxis))
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  c2>pb}{\f5\cf17\insrsid12267034  then return false}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return true}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034  
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\cf11\insrsid12267034  shapetype}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\cf11\insrsid12267034  #}{\f5\insrsid12267034 rectangle
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  isbounded}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pbounding
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  trueshape}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pbounded
\par }{\f5\cf17\insrsid12267034   return me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  getMOIfactor}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- multiply mass by this factor to get the moment of inertia
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  pbounded.getMOIfactor()
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  pa*pb*(pa+pb)/}{\f5\cf15\insrsid12267034 12}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  drawimage}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  pbounding}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par     }{\f5\cf18\insrsid12267034 -- draw the bounded shape
\par }{\f5\cf17\insrsid12267034     return}{\f5\insrsid12267034  pbounded.drawImage()
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   im=}{\f5\cf11\insrsid12267034 image}{\f5\insrsid12267034 (pa*}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 ,pb*}{\f5\cf15\insrsid12267034 2}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 16}{\f5\insrsid12267034 )
\par   im.}{\f5\cf11\insrsid12267034 draw}{\f5\insrsid12267034 (im.}{\f5\cf11\insrsid12267034 rect}{\f5\insrsid12267034 ,[}{\f5\cf11\insrsid12267034 #shapetype}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #rect}{\f5\insrsid12267034 ,}{
\f5\cf11\insrsid12267034 #color}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 rgb}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{
\f5\insrsid12267034 )])
\par   im.}{\f5\cf11\insrsid12267034 draw}{\f5\insrsid12267034 (}{\f5\cf11\insrsid12267034 rect}{\f5\insrsid12267034 (pa-}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,pb-}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ,pa+}{\f5\cf15\insrsid12267034 1}{
\f5\insrsid12267034 ,pb+}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ),[}{\f5\cf11\insrsid12267034 #shapetype}{\f5\insrsid12267034 :}{\f5\cf11\insrsid12267034 #oval}{\f5\insrsid12267034 ,}{\f5\cf11\insrsid12267034 #color}{\f5\insrsid12267034 :}{
\f5\cf11\insrsid12267034 rgb}{\f5\insrsid12267034 (}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 ,}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 )])
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  im
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf18\insrsid12267034 --------- Collisions (PRIVATE handlers: public access only through checkCollision)
\par }{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  particleCollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , pt, tm
\par   }{\f5\cf18\insrsid12267034 -- test for collision with the four line segments
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesOutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  asWall=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  asWall=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- if asWall is true then we ignore the lengths of the walls
\par }{\f5\insrsid12267034   tlist=[]
\par }{\f5\cf17\insrsid12267034   repeat with}{\f5\insrsid12267034  w}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  pwalls
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (w.particleCollision(pt, tm, asWall))
\par }{\f5\cf17\insrsid12267034   end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034   firstcollision(tlist)
\par   }{\f5\cf18\insrsid12267034 -- NB: we could optimize this by calculating in advance which walls
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- are potential collision targets - however, this test is already
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- a part of the particleCollision function, so we probably
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- wouldn't save much time
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  circleCollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , cir, tm
\par   }{\f5\cf18\insrsid12267034 -- test for collision with the four line segments
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesOutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  asWall=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  asWall=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   tlist=[]
\par }{\f5\cf17\insrsid12267034   repeat with}{\f5\insrsid12267034  w}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  pwalls
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 ( cir.lineCollision(w, tm, asWall))
\par }{\f5\cf17\insrsid12267034   end repeat}{\f5\insrsid12267034 
\par   }{\f5\cf18\insrsid12267034 -- test for collision with the vertices 
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesOutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par }{\f5\cf17\insrsid12267034     repeat with}{\f5\insrsid12267034  p}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  pVertices
\par       tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (cir.particleCollision(p, tm))
\par }{\f5\cf17\insrsid12267034     end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   r=firstcollision(tlist)
\par   }{\f5\cf18\insrsid12267034 -- NB: we could optimize this by calculating in advance which walls
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- are potential collision targets - in particular, the circle could
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- only collide with a vertex if it doesn't collide with a wall
\par }{\f5\insrsid12267034   
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034   r
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  lineCollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , ln, tm
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  tlist}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  []
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  ln.checkends()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- test for collision between the line endpoints and the rectangle
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  pt1}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  ln.getStartPoint()
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .particleCollision(pt1,tm))
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  pt2}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  ln.getEndPoint()
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .particleCollision(pt2,tm))
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if  me}{\f5\insrsid12267034 .collidesoutside()}{\f5\cf17\insrsid12267034  and}{\f5\insrsid12267034  not}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 .pointInside(ln.getLoc())}{\f5\cf17\insrsid12267034  then}{
\f5\insrsid12267034 
\par     }{\f5\cf18\insrsid12267034 -- test for collision between the rectangle vertices and the line
\par }{\f5\cf17\insrsid12267034     set}{\f5\insrsid12267034  vl}{\f5\cf17\insrsid12267034  to me}{\f5\insrsid12267034 .getVertices()
\par }{\f5\cf17\insrsid12267034     repeat with}{\f5\insrsid12267034  v}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  vl
\par       tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (ln.particleCollision(v, tm))
\par }{\f5\cf17\insrsid12267034     end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  firstCollision(tlist)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  rectangleCollision}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , rec, tm, opp
\par   }{\f5\cf18\insrsid12267034 -- tests in first direction only if opp is 1.
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034  not rec.collidesoutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par     }{\f5\cf18\insrsid12267034 -- one of them has to collide outside or there is no collision
\par }{\f5\cf17\insrsid12267034     if}{\f5\insrsid12267034  not opp}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034  rec.rectangleCollision(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , tm,}{\f5\cf15\insrsid12267034  1}{\f5\insrsid12267034 
)
\par }{\f5\cf17\insrsid12267034     return}{\f5\cf11\insrsid12267034  #none}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   
\par   }{\f5\cf18\insrsid12267034 -- test for collision between each vertex and the opposing rectangle
\par }{\f5\insrsid12267034   vl=rec.getVertices()
\par   tlist=[]
\par }{\f5\cf17\insrsid12267034   repeat with}{\f5\insrsid12267034  v}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  vl
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .particleCollision(v, tm))
\par }{\f5\cf17\insrsid12267034   end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   if}{\f5\insrsid12267034   opp}{\f5\cf17\insrsid12267034  then return}{\f5\insrsid12267034   firstcollision(tlist)
\par   tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (rec.rectangleCollision(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 ,tm,}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 ))
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  firstcollision(tlist)
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  particleCollisionSpin}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , par, tm
\par   }{\f5\cf18\insrsid12267034 -- any collision with a particle where spin is involved
\par }{\f5\insrsid12267034   tlist=[]
\par   }{\f5\cf18\insrsid12267034 -- test for collision with the four line segments
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesOutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par     asWall=}{\f5\cf15\insrsid12267034 0}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   else}{\f5\insrsid12267034  asWall=}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 
\par   tlist=[]
\par }{\f5\cf17\insrsid12267034   repeat with}{\f5\insrsid12267034  w}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  pwalls
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (w.particleCollisionSpin(par, tm, asWall))
\par }{\f5\cf17\insrsid12267034   end repeat}{\f5\insrsid12267034 
\par   r=firstcollision(tlist)
\par   
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034   r
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  circleCollisionSpin}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , cir, tm
\par   }{\f5\cf18\insrsid12267034 -- test for collision with the four line segments
\par }{\f5\insrsid12267034   w1=}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 .getWall(}{\f5\cf15\insrsid12267034 1}{\f5\insrsid12267034 )
\par   tlist=[]
\par }{\f5\cf17\insrsid12267034   repeat with}{\f5\insrsid12267034  w}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  pwalls
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (w.circleCollisionSpin(cir, tm))
\par }{\f5\cf17\insrsid12267034   end repeat}{\f5\insrsid12267034 
\par   
\par }{\f5\cf17\insrsid12267034   if me}{\f5\insrsid12267034 .collidesOutside()}{\f5\cf17\insrsid12267034  then}{\f5\insrsid12267034  
\par     }{\f5\cf18\insrsid12267034 -- test for collision with the vertices
\par }{\f5\cf17\insrsid12267034     repeat with}{\f5\insrsid12267034  p}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  pVertices
\par }{\f5\cf17\insrsid12267034       set}{\f5\insrsid12267034  t1}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  p.circleCollisionSpin(cir, tm)
\par       tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (t1)
\par }{\f5\cf17\insrsid12267034     end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   end if}{\f5\insrsid12267034 
\par   r=firstcollision(tlist)
\par   
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034   r
\par   
\par }{\f5\cf17\insrsid12267034 end}{\f5\insrsid12267034 
\par 
\par }{\f5\cf17\insrsid12267034 on}{\f5\insrsid12267034  rectangleCollisionSpin}{\f5\cf17\insrsid12267034  me}{\f5\insrsid12267034 , rec, tm
\par   }{\f5\cf18\insrsid12267034 -- just for variety's sake, this time we'll test one-way,
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- against the walls and vertices, rather than both ways
\par }{\f5\insrsid12267034   }{\f5\cf18\insrsid12267034 -- against vertices only
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  wl}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  rec.getWalls()
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  tlist}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  []
\par }{\f5\cf17\insrsid12267034   repeat with}{\f5\insrsid12267034  w}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  wl
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (w.rectangleCollisionSpin(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 , tm))
\par }{\f5\cf17\insrsid12267034   end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   set}{\f5\insrsid12267034  vl}{\f5\cf17\insrsid12267034  to}{\f5\insrsid12267034  rec.getVertices()
\par }{\f5\cf17\insrsid12267034   repeat with}{\f5\insrsid12267034  v}{\f5\cf11\insrsid12267034  in}{\f5\insrsid12267034  vl
\par     tlist.}{\f5\cf11\insrsid12267034 add}{\f5\insrsid12267034 (v.rectangleCollisionSpin(}{\f5\cf17\insrsid12267034 me}{\f5\insrsid12267034 ,tm))
\par }{\f5\cf17\insrsid12267034   end repeat}{\f5\insrsid12267034 
\par }{\f5\cf17\insrsid12267034   return}{\f5\insrsid12267034  firstCollision(tlist)
\par }{\f5\cf17\insrsid12267034 end
\par \page }{\b\f5\fs36\ul\insrsid15274402 \lquote SHAPE LINESEGMENT\rquote  PARENT SCRIPT}{\b\f5\fs36\ul\insrsid12267034 
\par }\pard \s15\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid15274402 {\f5\cf17\insrsid15274402 
\par property}{\f5\insrsid15274402  pvector, pnormal
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  plength }{\f5\cf18\insrsid15274402 -- actually half-length
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  plastrot
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  pcheckends 
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  pendpoints
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  pcollisiontype
\par 
\par }{\f5\cf18\insrsid15274402 --NB: in this version, lines are always considered to be symmetrical
\par }{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 on new me}{\f5\insrsid15274402 , par, props
\par   }{\f5\cf18\insrsid15274402 -- props: [collisionType, half-length, (irrelevant), checkEnds]
\par }{\f5\insrsid15274402   pcollisiontype=props[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ]
\par   plength=props[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ]
\par   plastrot=}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  props.}{\f5\cf11\insrsid15274402 count}{\f5\insrsid15274402 <}{\f5\cf15\insrsid15274402 4}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  pcheckends=}{\f5\cf15\insrsid15274402 1}{
\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  pcheckends=props[}{\f5\cf15\insrsid15274402 4}{\f5\insrsid15274402 ]
\par   }{\f5\cf18\insrsid15274402 -- pcheckends defines whether the line's end-points are relevant
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- (not true, for example, for the edges of a rectangle, since 
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- the rectangle vertices are considered separately)
\par }{\f5\insrsid15274402   pvector=}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 )
\par   pnormal=}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 )
\par   pendpoints=[]
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pcheckends}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- create end points as particle children
\par }{\f5\insrsid15274402     pendpoints.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 script}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 "Child shape"}{\f5\insrsid15274402 ).}{\f5\cf17\insrsid15274402 new}{
\f5\insrsid15274402 (par,}{\f5\cf11\insrsid15274402  #particle}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402  point}{\f5\insrsid15274402 (-props[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ],}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),}{
\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 , []))
\par     pendpoints.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 script}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 "Child shape"}{\f5\insrsid15274402 ).}{\f5\cf17\insrsid15274402 new}{\f5\insrsid15274402 (par,}{
\f5\cf11\insrsid15274402  #particle}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402  point}{\f5\insrsid15274402 (props[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ],}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),}{\f5\cf15\insrsid15274402  0}{
\f5\insrsid15274402 , []))
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  checkcollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , obj, t
\par }{\f5\cf17\insrsid15274402   if me}{\f5\insrsid15274402 .spinning()}{\f5\cf17\insrsid15274402  then return me}{\f5\insrsid15274402 .spinningCollision(obj, t)
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  obj.spinning()}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  obj.spinningCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , t)
\par   }{\f5\cf18\insrsid15274402 -- pass collision along to relevant object
\par }{\f5\cf17\insrsid15274402   case}{\f5\insrsid15274402  obj.}{\f5\cf11\insrsid15274402 shapetype}{\f5\insrsid15274402 ()}{\f5\cf17\insrsid15274402  of}{\f5\insrsid15274402 
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 circle:
\par       r= obj.lineCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , t)
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 rectangle,}{\f5\cf11\insrsid15274402  #}{\f5\insrsid15274402 aaRectangle:
\par       r= obj.lineCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , t)
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 linesegment:
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .lineCollision(obj, t)
\par }{\f5\cf11\insrsid15274402     #particle}{\f5\insrsid15274402 :
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .particleCollision(obj, t)
\par }{\f5\cf17\insrsid15274402   end case}{\f5\insrsid15274402 
\par   }{\f5\cf18\insrsid15274402 -- if no collision, or both objects are unbounded, then we're done
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  r=}{\f5\cf11\insrsid15274402 #none}{\f5\cf17\insrsid15274402  or}{\f5\insrsid15274402  not obj.isBounded()}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  r
\par   }{\f5\cf18\insrsid15274402 -- otherwise, if either one is bounded then check collision with the true shape
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- this will occur if the result of the collision check was a t-value or a 
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- symbol such as #inside or #overlap
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402 .checkcollision(obj.trueshape(),t)
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  spinningCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , obj, t
\par   }{\f5\cf18\insrsid15274402 -- invoked if the line encounters any other shape while spinning
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- NB: this will only be invoked if the bounding circle is intersected
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  obj.isBounded()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  obj=obj.trueshape() }{\f5\cf18\insrsid15274402 -- don't let's overdo the preliminary tests
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- pass collision along to relevant object
\par }{\f5\cf17\insrsid15274402   case}{\f5\insrsid15274402  obj.}{\f5\cf11\insrsid15274402 shapetype}{\f5\insrsid15274402 ()}{\f5\cf17\insrsid15274402  of}{\f5\insrsid15274402 
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 circle:
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .circleCollisionSpin(obj, t)
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 Rectangle:
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .rectangleCollisionSpin(obj, t)
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 Linesegment:
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .lineCollisionSpin(obj, t)
\par }{\f5\cf11\insrsid15274402     #Particle}{\f5\insrsid15274402 :
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .particleCollisionSpin(obj, t)
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 aaRectangle:
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .aaRectangleSpin(obj, t)
\par }{\f5\cf17\insrsid15274402   end case}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  r
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf18\insrsid15274402 --------------- Accessor methods
\par }{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getNormalVector}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402  
\par   }{\f5\cf18\insrsid15274402 -- note that if the line only collides on one side
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- then this points out on that side
\par }{\f5\insrsid15274402   r=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getrotation() }{\f5\cf18\insrsid15274402 -- updates plastrot if changed
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  r=plastrot}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pnormal
\par }{\f5\cf17\insrsid15274402   me}{\f5\insrsid15274402 .resetvector(r)
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pnormal
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getlinevector}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- vector from one endpoint to the other
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402 .getdirectionvector()*plength*}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getdirectionvector}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- unit vector along line
\par }{\f5\insrsid15274402   r=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getrotation()
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  r=plastrot}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pvector
\par }{\f5\cf17\insrsid15274402   me}{\f5\insrsid15274402 .resetvector(r)
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pvector
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  resetvector}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , r
\par }{\f5\cf17\insrsid15274402   if}{\f5\cf11\insrsid15274402  voidp}{\f5\insrsid15274402 (r)}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par     r=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getrotation()
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  r=plastrot}{\f5\cf17\insrsid15274402  then}{\f5\cf11\insrsid15274402  exit}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   
\par   plastrot=r
\par   pvector=directionvector(r)
\par   pnormal=normalVector(pvector)
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getstartPoint}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pcheckends}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pendpoints[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ]
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getEndPoint}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pcheckends}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pendpoints[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ]
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getlength}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402  
\par   }{\f5\cf18\insrsid15274402 -- remember that this is actually the half-length, 
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- or distance from the center to either endpoint
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  plength
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  checkends}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pcheckends
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesinside}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesoutside}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesboth}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  (pcollisiontype=}{\f5\cf11\insrsid15274402 #both}{\f5\insrsid15274402 )
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getRadius}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  plength
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getWidth}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  plength
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getHeight}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\cf11\insrsid15274402  shapetype}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf11\insrsid15274402  #}{\f5\insrsid15274402 linesegment
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  isbounded}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  trueshape}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- a line segment can't be a bounding shape
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getMOIfactor}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par   }{\f5\cf18\insrsid15274402 -- multiply mass by this factor to get the moment of inertia
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  plength*plength*}{\f5\cf15\insrsid15274402 4}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  drawimage}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par   im=}{\f5\cf11\insrsid15274402 image}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 integer}{\f5\insrsid15274402 (plength*}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ),}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 
16}{\f5\insrsid15274402 )
\par   im.}{\f5\cf11\insrsid15274402 fill}{\f5\insrsid15274402 (im.}{\f5\cf11\insrsid15274402 rect}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402 rgb}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{
\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ))
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  im
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf18\insrsid15274402 --------- Collisions (PRIVATE handlers: public access only through checkCollision)
\par }{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  particleCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , pt, tm, asWall, offsetRadius }{\f5\cf18\insrsid15274402 -- also for circles, with offsetRadius>0
\par }{\f5\cf17\insrsid15274402   if}{\f5\cf11\insrsid15274402  voidp}{\f5\insrsid15274402 (offsetRadius)}{\f5\cf17\insrsid15274402  then set}{\f5\insrsid15274402  offsetRadius}{\f5\cf17\insrsid15274402  to}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 

\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  n}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getNormalVector()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  a}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  pt.getLoc()-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  v}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  pt.getVelocity()-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getVelocity()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  c}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  component(a, n) }{\f5\cf18\insrsid15274402 -- perpendicular distance from wall in normal direction
\par }{\f5\cf17\insrsid15274402   if}{\f5\cf11\insrsid15274402  abs}{\f5\insrsid15274402 (c)<offsetRadius}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par     }{\f5\cf18\insrsid15274402 -- embedded
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  not asWall}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par       }{\f5\cf18\insrsid15274402 -- check if past the edge of line
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  dist}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  mag(a+c*n)-}{\f5\cf11\insrsid15274402 sqrt}{\f5\insrsid15274402 (offsetRadius*offsetRadius-c*c)
\par }{\f5\cf17\insrsid15274402       if}{\f5\insrsid15274402  dist>plength}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     return}{\f5\cf11\insrsid15274402  #}{\f5\insrsid15274402 already
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   
\par }{\f5\cf17\insrsid15274402   if me}{\f5\insrsid15274402 .collidesboth()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  c<}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- reverse the normal
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  n}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  -n
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  c}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  -c
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par     
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  c<}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- on the non-colliding side of the wall
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  component(v,n)>=}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- traveling away from wall
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- check if start and end points are on opposite sides of line
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  c}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  c-offsetRadius
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  d}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  component(a+v*tm,n)-offsetRadius
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  c*d>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- no intersection 
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  t}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  c/(c-d)
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  t>}{\f5\cf15\insrsid15274402 1}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  t=}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  t<}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  t=}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  p}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  a+v*t*tm-n*offsetRadius }{\f5\cf18\insrsid15274402 -- intersection point
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not asWall}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- check if collision is within limits
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  dist}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  mag(p)
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  dist>plength}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  [}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 t:t,}{\f5\cf11\insrsid15274402 #normal}{\f5\insrsid15274402 :n,}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 moment1:}{
\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 moment2:p,}{\f5\cf11\insrsid15274402 #ref}{
\f5\insrsid15274402 :}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 ]
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  lineCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , ln, tm, opp
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not pcheckends}{\f5\cf17\insrsid15274402  and}{\f5\insrsid15274402  not ln.checkends()}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402  
\par   }{\f5\cf18\insrsid15274402 -- actually, this could cause errors in some very specific cases, 
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- but we won't worry about it
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not ln.checkends()}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  ln.lineCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , tm,}{\f5\cf15\insrsid15274402  1}{
\f5\insrsid15274402 )
\par   
\par   }{\f5\cf18\insrsid15274402 --  test for collision between each endpoint and the other line segment
\par }{\f5\insrsid15274402   p1=ln.getStartPoint()
\par   t1=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .particleCollision(p1, tm)
\par   p2=ln.getEndPoint()
\par   t2=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .particleCollision(p2, tm)
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  opp}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  firstCollision([t1,t2])
\par   }{\f5\cf18\insrsid15274402 -- if not already done, repeat the other way around
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  opp}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  ln.lineCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , tm,}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 )
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  firstCollision([t1, t2, opp])
\par   
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  particleCollisionSpin}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , pt, tm, aswall
\par   }{\f5\cf18\insrsid15274402 -- Spinning line with moving or stationary particle
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pt.ismoving()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- pass across to Particle object
\par }{\f5\cf17\insrsid15274402     return}{\f5\insrsid15274402  pt.lineCollisionSpin(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 ,tm,asWall)
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  startAng}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getRotation()
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  angDisplacement}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getAngularVelocity()*tm
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  endAng}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  startAng+angDisplacement
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  dir}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getAngularDirection()
\par     }{\f5\cf18\insrsid15274402 -- set disp to the displacement of the particle from the axis of rotation
\par }{\f5\cf17\insrsid15274402     set}{\f5\cf11\insrsid15274402  x}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getPerpendicularAxisOffset()
\par }{\f5\cf17\insrsid15274402     if}{\f5\cf11\insrsid15274402  x}{\f5\insrsid15274402 <>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  disp}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  pt.getLoc()-(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()+}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getAxis()) 

\par }{\f5\cf17\insrsid15274402     else}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  disp}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  pt.getLoc()-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc() 
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  d}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  sqmag(disp)
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  aswall}{\f5\cf17\insrsid15274402  or}{\f5\insrsid15274402  d<=plength*plength +}{\f5\cf11\insrsid15274402 x}{\f5\insrsid15274402 *}{\f5\cf11\insrsid15274402 x}{\f5\cf17\insrsid15274402  then}{
\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- collision on flat
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  ptAng}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  angleOf(disp)
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  a}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  constrainAngle(ptAng-startAng,-}{\f5\cf11\insrsid15274402 pi}{\f5\insrsid15274402 )
\par       }{\f5\cf18\insrsid15274402 -- calculate angle at which collision would occur
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  collAng}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  asin(}{\f5\cf11\insrsid15274402 x}{\f5\insrsid15274402 /}{\f5\cf11\insrsid15274402 sqrt}{\f5\insrsid15274402 (}{
\f5\cf11\insrsid15274402 float}{\f5\insrsid15274402 (d)))
\par }{\f5\cf17\insrsid15274402       if}{\f5\insrsid15274402  collAng=}{\f5\cf11\insrsid15274402 #error}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- shouldn't happen
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  t}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  (a-dir*collAng)/angdisplacement
\par       
\par }{\f5\cf17\insrsid15274402       if}{\f5\insrsid15274402  t<}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  or}{\f5\insrsid15274402  t>}{\f5\cf15\insrsid15274402 1}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{
\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  n}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  directionVector(}{\f5\cf11\insrsid15274402 pi}{\f5\insrsid15274402 /}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 
+startAng+t*angdisplacement)
\par       
\par }{\f5\cf17\insrsid15274402       return}{\f5\insrsid15274402  [}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 t:t,}{\f5\cf11\insrsid15274402  #normal}{\f5\insrsid15274402 :n,}{\f5\cf11\insrsid15274402  #}{\f5\insrsid15274402 moment2: disp,}{
\f5\cf11\insrsid15274402  #}{\f5\insrsid15274402 moment1:}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),}{\f5\cf11\insrsid15274402 #}{
\f5\insrsid15274402 ref1:pt,}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 ref2:}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 ]
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  circleCollisionSpin}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , cir, tm, aswall
\par   }{\f5\cf18\insrsid15274402 -- Spinning line with moving or stationary circle
\par }{\f5\insrsid15274402   
\par   }{\f5\cf18\insrsid15274402 -- determine start and end positions
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  startPos}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  cir.getLoc()-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  endPos}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  cir.getLocAfter(tm)-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLocAfter(tm)
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  lineStartAng}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getRotation()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  lineAngDisplacement}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getAngularVelocity()*tm
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  lineEndAng}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  lineStartAng+lineAngDisplacement
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  n1}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  directionVector(lineStartAng+}{\f5\cf11\insrsid15274402 pi}{\f5\insrsid15274402 /}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 )
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  n2}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  directionVector(lineEndAng+}{\f5\cf11\insrsid15274402 pi}{\f5\insrsid15274402 /}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 )
\par   }{\f5\cf18\insrsid15274402 -- point n1 and n2 towards the initial position of the circle
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  startDist}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  dotprod(n1, startPos)
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  startDist<}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  n1}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  -n1
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  n2}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  -n2
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  startDist}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  -startDist
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  r}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  cir.getRadius()
\par   }{\f5\cf18\insrsid15274402 -- check if circle crosses the line
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  (startDist-r)*(dotProd(n2,endPos)-r)<}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par     }{\f5\cf18\insrsid15274402 -- check if intersection overlaps the line
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  mag(startPos-r*n1)<=plength}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402       return}{\f5\insrsid15274402  [}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 t:}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402 #normal}{\f5\insrsid15274402 :-n1,}{\f5\cf11\insrsid15274402 #
}{\f5\insrsid15274402 moment1:}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),moment2:startPos-r*n1,}{\f5\cf11\insrsid15274402 #}{
\f5\insrsid15274402 ref1:cir,}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 ref2:}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 ]
\par }{\f5\cf17\insrsid15274402     else if}{\f5\insrsid15274402  mag(endPos-r*n2)<=plength}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par }{\f5\cf17\insrsid15274402       return}{\f5\insrsid15274402  [}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 t:}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402 #normal}{\f5\insrsid15274402 :-n1,}{\f5\cf11\insrsid15274402 #
}{\f5\insrsid15274402 moment1:}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),moment2:startPos-r*n1,}{\f5\cf11\insrsid15274402 #}{
\f5\insrsid15274402 ref1:cir,}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 ref2:}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 ]
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   }{\f5\cf18\insrsid15274402 -- otherwise, check for intersection with endpoints
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pcheckends}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     t1=pendpoints[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ].circleCollisionSpin(cir,tm)
\par     t2=pendpoints[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ].circleCollisionSpin(cir,tm)
\par }{\f5\cf17\insrsid15274402     return}{\f5\insrsid15274402  firstcollision([t1,t2])
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402  
\par 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  rectangleCollisionSpin}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , rec, tm
\par   }{\f5\cf18\insrsid15274402 -- works whichever one is spinning
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  wl}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  rec.getWalls()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  tlist}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  []
\par }{\f5\cf17\insrsid15274402   repeat with}{\f5\insrsid15274402  w}{\f5\cf11\insrsid15274402  in}{\f5\insrsid15274402  wl
\par     tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .endpointCollisionSpin(w, tm))
\par }{\f5\cf17\insrsid15274402   end repeat}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  vl}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  rec.getvertices()
\par }{\f5\cf17\insrsid15274402   repeat with}{\f5\insrsid15274402  v}{\f5\cf11\insrsid15274402  in}{\f5\insrsid15274402  vl
\par     tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (v.lineCollisionSpin(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , tm))
\par }{\f5\cf17\insrsid15274402   end repeat}{\f5\insrsid15274402 
\par   }{\f5\cf17\insrsid15274402 return}{\f5\insrsid15274402  firstCollision(tlist)
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  lineCollisionSpin}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , ln, tm
\par   }{\f5\cf18\insrsid15274402 -- has to be with an endpoint of one line or the other
\par }{\f5\insrsid15274402   t1=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .endpointCollisionSpin(ln, tm)
\par   t2=ln.endpointCollisionSpin(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , tm)
\par   }{\f5\cf17\insrsid15274402 return}{\f5\insrsid15274402  firstcollision([t1,t2])
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  endpointCollisionSpin}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , ln, tm
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not pcheckends}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par   t1=pendpoints[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ].lineCollisionSpin(ln,tm)
\par   t2=pendpoints[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ].lineCollisionSpin(ln,tm)
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  firstcollision([t1,t2])
\par }{\f5\cf17\insrsid15274402 end
\par }{\f5\insrsid15274402 \page }{\b\f5\fs36\ul\insrsid15274402 \lquote SHAPE PARTICLE\rquote  PARENT SCRIPT
\par }{\f5\cf18\insrsid15274402 
\par -- Particles are rather simple...
\par }{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 on new me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  drawimage}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par   im=}{\f5\cf11\insrsid15274402 image}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 4}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 4}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 16}{\f5\insrsid15274402 )
\par   im.}{\f5\cf11\insrsid15274402 fill}{\f5\insrsid15274402 (im.}{\f5\cf11\insrsid15274402 rect}{\f5\insrsid15274402 ,[}{\f5\cf11\insrsid15274402 #shapetype}{\f5\insrsid15274402 :}{\f5\cf11\insrsid15274402 #oval}{\f5\insrsid15274402 ,}{
\f5\cf11\insrsid15274402 #color}{\f5\insrsid15274402 :}{\f5\cf11\insrsid15274402 rgb}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{
\f5\insrsid15274402 )])
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  im
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  checkcollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , obj, t
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  obj.}{\f5\cf11\insrsid15274402 shapetype}{\f5\insrsid15274402 ()=}{\f5\cf11\insrsid15274402 #particle}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 

\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  obj.checkcollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , t)
\par   
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getRadius}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getWidth}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getHeight}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesinside}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesoutside}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesboth}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\cf11\insrsid15274402  shapetype}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf11\insrsid15274402  #particle}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  isbounded}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  trueshape}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getMOIfactor}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf18\insrsid15274402 ------- We do check for collisions when the particle is spinning around
\par ------- some axis (ie, when it is the child of some other spinning object)
\par }{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  circleCollisionSpin}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , cir, tm
\par   }{\f5\cf18\insrsid15274402 -- particle rotating about a fixed or moving axis, 
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- cir moving or stationary
\par }{\f5\insrsid15274402   
\par   }{\f5\cf18\insrsid15274402 -- NB: assumes circle is colliding outside
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- Very basic detection: just checks if the particle ends up
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- inside the circle, and collides if so. Misses cases where
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- the particle 'brushes' against the circle
\par }{\f5\insrsid15274402   
\par   }{\f5\cf18\insrsid15274402 -- determine start and end positions of point
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  endPos}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getLocAfter(tm)-cir.getLocAfter(tm)
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  r}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  cir.getRadius()
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  sqMag(endPos)<=r*r}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  startPos}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getLoc()-cir.getLoc()
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  norm}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  -norm(startPos)
\par     }{\f5\cf18\insrsid15274402 -- check if departing
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  dotProd(norm,endPos-startPos)<}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     return}{\f5\insrsid15274402  [}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 t:}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402 #normal}{\f5\insrsid15274402 :norm,}{\f5\cf11\insrsid15274402 #}
{\f5\insrsid15274402 moment1:}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 moment2:}{
\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 ref1:}{\f5\cf17\insrsid15274402 me}{
\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 ref2:cir]
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402  
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  linecollisionSpin}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , ln, tm, asWall
\par   }{\f5\cf18\insrsid15274402 -- particle rotating about a fixed or moving axis, 
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- similarly for ln
\par }{\f5\insrsid15274402   
\par   }{\f5\cf18\insrsid15274402 -- NB: assumes line is collision type #both. 
\par }{\f5\insrsid15274402   
\par   }{\f5\cf18\insrsid15274402 -- determine start and end positions of point
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  startPos}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getLoc()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  endPos}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getLocAfter(tm)
\par   }{\f5\cf18\insrsid15274402 -- determine start and end positions of line
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  lineStartAng}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  ln.getRotation()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  lineAngDisplacement}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  ln.getAngularVelocity()*tm
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  lineEndAng}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  lineStartAng+lineAngDisplacement
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  lineStartPos}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  ln.getLoc()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  lineEndPos}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  ln.getLocAfter(tm)
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  norm1}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  directionVector(lineStartAng+}{\f5\cf11\insrsid15274402 pi}{\f5\insrsid15274402 /}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 )
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  norm2}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  directionVector(lineEndAng+}{\f5\cf11\insrsid15274402 pi}{\f5\insrsid15274402 /}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 )
\par   }{\f5\cf18\insrsid15274402 -- check if the point crosses the line
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  d1}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  dotProd(startPos-lineStartPos,norm1)
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  d2}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  dotProd(EndPos-lineEndPos,norm2)
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  d1*d2>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  or}{\f5\insrsid15274402  d1=}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{
\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not asWall}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- check if the straight path comes close to the line segment
\par }{\f5\insrsid15274402     }{\f5\cf18\insrsid15274402 -- ie - if either the start or end points of the motion have the 
\par }{\f5\insrsid15274402     }{\f5\cf18\insrsid15274402 -- particle within range of the line endpoint.
\par }{\f5\insrsid15274402     
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  l}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  ln.getLength()
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  mag(startPos-lineStartPos)>l}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402       if}{\f5\insrsid15274402  mag(endPos-lineEndPos)>l}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  [}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 t:}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402 #normal}{\f5\insrsid15274402 :-norm1,}{\f5\cf11\insrsid15274402 #}
{\f5\insrsid15274402 moment1:}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),moment2:startPos-lineStartPos,}{\f5\cf11\insrsid15274402 #}{
\f5\insrsid15274402 ref1:}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 ref2:ln]
\par   
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  rectangleCollisionSpin}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , rec, tm
\par   }{\f5\cf18\insrsid15274402 -- This particle is rotating about an axis, as may the rectangle
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  wl}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  rec.getWalls()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  tlist}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  []
\par }{\f5\cf17\insrsid15274402   repeat with}{\f5\insrsid15274402  w}{\f5\cf11\insrsid15274402  in}{\f5\insrsid15274402  wl
\par     tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .lineCollisionSpin(w,tm))
\par }{\f5\cf17\insrsid15274402   end repeat}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  firstcollision(tlist)
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par \page }{\b\f5\fs36\ul\insrsid15274402 \lquote SHAPE aaRECTANGLE\rquote  PARENT SCRIPT
\par }{\f5\cf17\insrsid15274402 
\par property}{\f5\insrsid15274402  pa, pb
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  pcollisiontype
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  pvertices
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  pxaxis, pyaxis
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  pbounding
\par }{\f5\cf17\insrsid15274402 property}{\f5\insrsid15274402  pbounded
\par 
\par }{\f5\cf18\insrsid15274402 --- NB: this shape is not incorporated into spinning collisions. 
\par --- Only use for linear collision detection.
\par }{\f5\insrsid15274402 
\par }{\f5\cf18\insrsid15274402 -- Mostly similar to the rectangle object, 
\par -- but note that it does not have wall children
\par }{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 on new me}{\f5\insrsid15274402 , par, props, bounding
\par }{\f5\cf17\insrsid15274402   if}{\f5\cf11\insrsid15274402  stringp}{\f5\insrsid15274402 (bounding)}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     pbounding=}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 
\par     pbounded=}{\f5\cf11\insrsid15274402 script}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 "Child shape"}{\f5\insrsid15274402 ).}{\f5\cf17\insrsid15274402 new}{\f5\insrsid15274402 (par, bounding,}{\f5\cf11\insrsid15274402  point}{\f5\insrsid15274402 
(}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ),}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 , props)
\par     pcollisiontype=}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 outside
\par     pa=pbounded.getWidth()
\par     pb=pbounded.getHeight()
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402 
\par     pcollisiontype=props[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ]
\par     pa=props[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ]
\par     pb=props[}{\f5\cf15\insrsid15274402 3}{\f5\insrsid15274402 ]
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   plastrot=}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 
\par   pxaxis=}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 )
\par   pyaxis=}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 )
\par   pvertices=[]
\par   pvertices.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 script}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 "Child shape"}{\f5\insrsid15274402 ).}{\f5\cf17\insrsid15274402 new}{\f5\insrsid15274402 (par,}{
\f5\cf15\insrsid15274402  "particle"}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402  point}{\f5\insrsid15274402 (-pa,-pb),}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 , []))
\par   pvertices.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 script}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 "Child shape"}{\f5\insrsid15274402 ).}{\f5\cf17\insrsid15274402 new}{\f5\insrsid15274402 (par,}{
\f5\cf15\insrsid15274402  "particle"}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402  point}{\f5\insrsid15274402 (-pa,pb),}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 , []))
\par   pvertices.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 script}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 "Child shape"}{\f5\insrsid15274402 ).}{\f5\cf17\insrsid15274402 new}{\f5\insrsid15274402 (par,}{
\f5\cf15\insrsid15274402  "particle"}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402  point}{\f5\insrsid15274402 (pa,pb),}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 , []))
\par   pvertices.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 script}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 "Child shape"}{\f5\insrsid15274402 ).}{\f5\cf17\insrsid15274402 new}{\f5\insrsid15274402 (par,}{
\f5\cf15\insrsid15274402  "particle"}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402  point}{\f5\insrsid15274402 (pa,-pb),}{\f5\cf15\insrsid15274402  0}{\f5\insrsid15274402 , []))
\par }{\f5\cf17\insrsid15274402   if me}{\f5\insrsid15274402 .collidesBoth()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  col=}{\f5\cf11\insrsid15274402 #both}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  col=}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 outside 
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getvertices}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pvertices
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getXaxis}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pxaxis
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getYaxis}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pyaxis
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getwidth}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pbounding}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pbounding.getHorizontal()
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pa
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getheight}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pbounding}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pbounding.getVertical()
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pb
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getRadius}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par   a=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getWidth()
\par   b=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getHeight()
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf11\insrsid15274402  sqrt}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 float}{\f5\insrsid15274402 (a*a+b*b))
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  checkcollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , obj, t
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  obj.spinning()}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  obj.spinningCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , t)
\par }{\f5\cf17\insrsid15274402   case}{\f5\insrsid15274402  obj.}{\f5\cf11\insrsid15274402 shapetype}{\f5\insrsid15274402 ()}{\f5\cf17\insrsid15274402  of}{\f5\insrsid15274402 
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 circle:
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .circleCollision(obj, t)
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 Rectangle:
\par       
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .rectangleCollision(obj, t)
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 Linesegment:
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .lineCollision(obj, t)
\par }{\f5\cf11\insrsid15274402     #Particle}{\f5\insrsid15274402 :
\par       r=}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .particleCollision(obj, t)
\par }{\f5\cf11\insrsid15274402     #}{\f5\insrsid15274402 aaRectangle:
\par       r=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .aabbCollision(obj, t)
\par }{\f5\cf17\insrsid15274402   end case}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  r=}{\f5\cf11\insrsid15274402 #none}{\f5\cf17\insrsid15274402  or}{\f5\insrsid15274402  not (pbounding}{\f5\cf17\insrsid15274402  or}{\f5\insrsid15274402  obj.isbounded())}{\f5\cf17\insrsid15274402 
 then return}{\f5\insrsid15274402  r
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pbounding}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pbounded.checkCollision(obj,t)
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402 .checkCollision(obj.trueshape(),t)
\par   
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesinside}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  (pcollisiontype<>}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 outside)
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesoutside}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  (pcollisiontype<>}{\f5\cf11\insrsid15274402 #inside}{\f5\insrsid15274402 )
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  collidesboth}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  (pcollisiontype=}{\f5\cf11\insrsid15274402 #both}{\f5\insrsid15274402 )
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  pointInside}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , pt, offsetRadius
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  vect}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  pt-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()
\par }{\f5\cf17\insrsid15274402   if}{\f5\cf11\insrsid15274402  abs}{\f5\insrsid15274402 (vect[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ])>=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getWidth()+offsetRadius}{\f5\cf17\insrsid15274402 
 then  return false}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\cf11\insrsid15274402  abs}{\f5\insrsid15274402 (vect[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ])>=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getHeight()+offsetRadius}{\f5\cf17\insrsid15274402 
 then return false}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  offsetRadius>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     r1=}{\f5\cf11\insrsid15274402 abs}{\f5\insrsid15274402 (vect[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ])-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getWidth()
\par     r2=}{\f5\cf11\insrsid15274402 abs}{\f5\insrsid15274402 (vect[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ])-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getHeight()
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  r1*r1+r2*r2>=offsetRadius*offsetRadius}{\f5\cf17\insrsid15274402  then  return false}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return true}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402  
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  pointInsideRect}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , pt, offsetWidth, offsetHeight
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  vect}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  pt-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()
\par }{\f5\cf17\insrsid15274402   if}{\f5\cf11\insrsid15274402  abs}{\f5\insrsid15274402 (vect[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ])>}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getWidth()+offsetWidth}{\f5\cf17\insrsid15274402 
 then return false}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\cf11\insrsid15274402  abs}{\f5\insrsid15274402 (vect[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ])>}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getHeight()+offsetHeight}{\f5\cf17\insrsid15274402 
 then return false}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return true}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402  
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\cf11\insrsid15274402  shapetype}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf11\insrsid15274402  #}{\f5\insrsid15274402 aaRectangle
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  isbounded}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pbounding
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  trueshape}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pbounding}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pbounded
\par }{\f5\cf17\insrsid15274402   return me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  getMOIfactor}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pbounding}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pbounded.getMOIfactor()
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  pa*pb*(pa+pb)/}{\f5\cf15\insrsid15274402 12}{\f5\insrsid15274402  
\par   }{\f5\cf18\insrsid15274402 -- NB: this isn't really meaningful for an AA rectangle
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- unless it's an AABB - an AA rectangle doesn't spin!
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  drawimage}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  pbounding}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  pbounded.drawImage()
\par   im=}{\f5\cf11\insrsid15274402 image}{\f5\insrsid15274402 (pa*}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ,pb*}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 16}{\f5\insrsid15274402 )
\par   im.}{\f5\cf11\insrsid15274402 draw}{\f5\insrsid15274402 (im.}{\f5\cf11\insrsid15274402 rect}{\f5\insrsid15274402 ,[}{\f5\cf11\insrsid15274402 #shapetype}{\f5\insrsid15274402 :}{\f5\cf11\insrsid15274402 #rect}{\f5\insrsid15274402 ,}{
\f5\cf11\insrsid15274402 #color}{\f5\insrsid15274402 :}{\f5\cf11\insrsid15274402 rgb}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{
\f5\insrsid15274402 )])
\par   im.}{\f5\cf11\insrsid15274402 draw}{\f5\insrsid15274402 (}{\f5\cf11\insrsid15274402 rect}{\f5\insrsid15274402 (pa-}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ,pb-}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ,pa+}{\f5\cf15\insrsid15274402 1}{
\f5\insrsid15274402 ,pb+}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ),[}{\f5\cf11\insrsid15274402 #shapetype}{\f5\insrsid15274402 :}{\f5\cf11\insrsid15274402 #oval}{\f5\insrsid15274402 ,}{\f5\cf11\insrsid15274402 #color}{\f5\insrsid15274402 :}{
\f5\cf11\insrsid15274402 rgb}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 ,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 )])
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  im
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par }{\f5\cf18\insrsid15274402 --------- Collisions (PRIVATE handlers: public access only through checkCollision)
\par }{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  pointCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , p, v, ins, dir, leeway
\par   }{\f5\cf18\insrsid15274402 -- p= position of point, v= relative velocity, ins= checkInside, dir=travel direction, 
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- leeway=width (height) of object to check (for wall-wall collisions)
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  v[dir]=}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  v[dir]*(p[dir]-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()[dir])>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  and}{\f5\insrsid15274402  not ins}{\f5\cf17\insrsid15274402 
 then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- moving away
\par }{\f5\insrsid15274402   endPoint=p+v
\par   l=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  dir=}{\f5\cf15\insrsid15274402 1}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par     d=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getWidth() }{\f5\cf18\insrsid15274402 -- distance of wall from center
\par }{\f5\insrsid15274402     ch=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getHeight() }{\f5\cf18\insrsid15274402 -- wall length
\par }{\f5\insrsid15274402     n=pxaxis }{\f5\cf18\insrsid15274402 -- normal
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  not ins}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par }{\f5\cf11\insrsid15274402       nothing}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par     
\par     d=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getHeight()
\par     ch=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getwidth()
\par     n=pyaxis
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   }{\f5\cf18\insrsid15274402 -- calculate position of wall to check
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  (v[dir]>}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 )=ins}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     wall=l[dir]+d
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  
\par     wall=l[dir]-d
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   }{\f5\cf18\insrsid15274402 -- check for potential collision
\par }{\f5\insrsid15274402   c=(endPoint[dir]-wall)*(p[dir]-wall) 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  c<}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- potential collision: check if within time frame
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  t}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  (wall-p[dir])/v[dir]
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  not ins}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par       }{\f5\cf18\insrsid15274402 -- check if collision within wall length
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  collisionPoint}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  p+v*t
\par }{\f5\cf17\insrsid15274402       if}{\f5\cf11\insrsid15274402  abs}{\f5\insrsid15274402 (collisionPoint[}{\f5\cf15\insrsid15274402 3}{\f5\insrsid15274402 -dir]-l[}{\f5\cf15\insrsid15274402 3}{\f5\insrsid15274402 -dir])>ch+leeway}{\f5\cf17\insrsid15274402 
 then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par       
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- collision detected
\par }{\f5\cf17\insrsid15274402     return}{\f5\insrsid15274402  [}{\f5\cf11\insrsid15274402 #}{\f5\insrsid15274402 t:t,}{\f5\cf11\insrsid15274402 #normal}{\f5\insrsid15274402 :n]
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402  
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  particleCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , pt, tm
\par   relVelocity=(pt.getVelocity()-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getVelocity())*tm
\par   l=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()
\par   p=pt.getLoc()
\par }{\f5\cf17\insrsid15274402   if me}{\f5\insrsid15274402 .collidesBoth()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- test if inside the rectangle
\par }{\f5\insrsid15274402     checkInside=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointInside(p)
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  
\par     checkInside=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .collidesInside()
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not checkInside}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- test if inside the rectangle
\par }{\f5\cf17\insrsid15274402     if me}{\f5\insrsid15274402 .pointInside(p)}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #inside}{\f5\insrsid15274402 
\par     
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   
\par   }{\f5\cf18\insrsid15274402 -- test the two walls
\par }{\f5\insrsid15274402   t1=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointCollision(p, relVelocity, checkInside,}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 )
\par   t2=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointCollision(p, relVelocity, checkInside,}{\f5\cf15\insrsid15274402  2}{\f5\insrsid15274402 )
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  firstCollision([t1, t2])
\par   
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  circleCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , cir, tm
\par   relVelocity=(cir.getVelocity()-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getVelocity())*tm
\par   l=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()
\par   p=cir.getLoc()
\par   d=p-l
\par   r=cir.getRadius()
\par }{\f5\cf17\insrsid15274402   if me}{\f5\insrsid15274402 .collidesBoth()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- test if inside the rectangle
\par }{\f5\insrsid15274402     checkInside=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointInside(p, r)
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  
\par     checkInside=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .collidesInside()
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not checkInside}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- test if inside the rectangle
\par }{\f5\cf17\insrsid15274402     if me}{\f5\insrsid15274402 .pointInside(p, r)}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par }{\f5\cf17\insrsid15274402       return}{\f5\cf11\insrsid15274402  #}{\f5\insrsid15274402 overlap
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par     
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   
\par   tlist=[]
\par   }{\f5\cf18\insrsid15274402 -- test the two walls
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  relVelocity[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ]>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  offs=r
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  offs=-r
\par   tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointCollision(p+}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (offs,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 
), relVelocity, checkInside,}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 ))
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  relVelocity[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ]>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  offs=r
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  offs=-r
\par   tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointCollision(p+}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 
,offs), relVelocity, checkInside,}{\f5\cf15\insrsid15274402  2}{\f5\insrsid15274402 ))
\par   
\par }{\f5\cf17\insrsid15274402   if me}{\f5\insrsid15274402 .collidesOutside()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  }{\f5\cf18\insrsid15274402 -- test for collision with the vertices
\par }{\f5\cf17\insrsid15274402     repeat with}{\f5\insrsid15274402  pt}{\f5\cf11\insrsid15274402  in}{\f5\insrsid15274402  pVertices
\par }{\f5\cf17\insrsid15274402       set}{\f5\insrsid15274402  t1}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  cir.particleCollision(pt, tm)
\par       }{\f5\cf18\insrsid15274402 --      if listp(t1) then put "vertexbang"&&t1.t
\par }{\f5\insrsid15274402       tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (t1)
\par }{\f5\cf17\insrsid15274402     end repeat}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402   firstcollision(tlist)
\par   
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  lineCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , ln, tm
\par   }{\f5\cf18\insrsid15274402 -- test for collision between the line endpoints and the rectangle
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  tlist}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  []
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  pt1}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  ln.getStartPoint()
\par   tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .particleCollision(pt1,tm))
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  pt2}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  ln.getEndPoint()
\par   tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .particleCollision(pt2,tm))
\par }{\f5\cf17\insrsid15274402   if  me}{\f5\insrsid15274402 .collidesoutside()}{\f5\cf17\insrsid15274402  and}{\f5\insrsid15274402  not}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 .pointInside(ln.getLoc())}{\f5\cf17\insrsid15274402  then}{
\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- test for collision between the rectangle vertices and the line
\par }{\f5\cf17\insrsid15274402     set}{\f5\insrsid15274402  vl}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .getVertices()
\par     tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (ln.particleCollision(vl[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ], tm))
\par     tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (ln.particleCollision(vl[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ], tm))
\par     tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (ln.particleCollision(vl[}{\f5\cf15\insrsid15274402 3}{\f5\insrsid15274402 ], tm))
\par     tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (ln.particleCollision(vl[}{\f5\cf15\insrsid15274402 4}{\f5\insrsid15274402 ], tm))
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  firstCollision(tlist)
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  rectangleCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , rec, tm, opp
\par   }{\f5\cf18\insrsid15274402 -- test for collision between each vertex and the opposing rectangle
\par }{\f5\insrsid15274402   }{\f5\cf18\insrsid15274402 -- tests in first direction only if opp is 1.
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not rec.collidesoutside()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  not opp}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  rec.rectangleCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , tm,}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 
)
\par }{\f5\cf17\insrsid15274402     return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   
\par   vl=rec.getVertices()
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  t1}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .particleCollision(vl[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ], tm)
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  t2}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .particleCollision(vl[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ], tm)
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  t3}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .particleCollision(vl[}{\f5\cf15\insrsid15274402 3}{\f5\insrsid15274402 ], tm)
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  t4}{\f5\cf17\insrsid15274402  to me}{\f5\insrsid15274402 .particleCollision(vl[}{\f5\cf15\insrsid15274402 4}{\f5\insrsid15274402 ], tm)
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402   opp}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402   firstcollision([t1,t2, t3, t4])
\par }{\f5\cf17\insrsid15274402   set}{\f5\insrsid15274402  opp}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  rec.rectangleCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 ,tm,}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 )
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  firstcollision([t1,t2, t3, t4,opp])
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402 
\par 
\par }{\f5\cf17\insrsid15274402 on}{\f5\insrsid15274402  aabbCollision}{\f5\cf17\insrsid15274402  me}{\f5\insrsid15274402 , rec, tm, opp
\par   }{\f5\cf18\insrsid15274402 -- only check with a rectangle that collides on the outside
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not rec.collidesoutside()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  not opp}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  rec.aabbCollision(}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 , tm,}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 )

\par }{\f5\cf17\insrsid15274402     return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   }{\f5\cf18\insrsid15274402 -- test for collision between potentially colliding edges (2 possible collisions)
\par }{\f5\insrsid15274402   relVelocity=(rec.getVelocity()-}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getVelocity())*tm
\par   l=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .getLoc()
\par   p=rec.getLoc()
\par   d=p-l
\par   w=rec.getWidth()
\par   h=rec.getHeight()
\par }{\f5\cf17\insrsid15274402   if me}{\f5\insrsid15274402 .collidesBoth()}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- test if inside the rectangle
\par }{\f5\insrsid15274402     checkInside=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointInsideRect(p, w, h)
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  
\par     checkInside=}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .collidesInside()
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  not checkInside}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par     }{\f5\cf18\insrsid15274402 -- test if inside the rectangle
\par }{\f5\cf17\insrsid15274402     if me}{\f5\insrsid15274402 .pointInsideRect(p, w, h)}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #}{\f5\insrsid15274402 overlap
\par     
\par }{\f5\cf17\insrsid15274402   end if}{\f5\insrsid15274402 
\par   endPoint=p+relVelocity
\par   tlist=[]
\par   
\par   }{\f5\cf18\insrsid15274402 -- test the two walls
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  relVelocity[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ]>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  offs=w
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  offs=-w
\par   tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointCollision(p+}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (offs,}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 
), relVelocity, checkInside,}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 , h))
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  relVelocity[}{\f5\cf15\insrsid15274402 2}{\f5\insrsid15274402 ]>}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  offs=h
\par }{\f5\cf17\insrsid15274402   else}{\f5\insrsid15274402  offs=-h
\par   tlist.}{\f5\cf11\insrsid15274402 add}{\f5\insrsid15274402 (}{\f5\cf17\insrsid15274402 me}{\f5\insrsid15274402 .pointCollision(p+}{\f5\cf11\insrsid15274402 point}{\f5\insrsid15274402 (}{\f5\cf15\insrsid15274402 0}{\f5\insrsid15274402 
,offs), relVelocity, checkInside,}{\f5\cf15\insrsid15274402  2}{\f5\insrsid15274402 , w))
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  firstcollision(tlist)
\par   
\par }{\f5\cf17\insrsid15274402 end
\par \page }{\b\f5\fs36\ul\insrsid15274402 \lquote FIRSTCOLLISION\rquote  MOVIE SCRIPT
\par }{\f5\cf17\insrsid15274402 
\par on}{\f5\insrsid15274402  firstcollision lyst
\par }{\f5\cf17\insrsid15274402   repeat with}{\f5\insrsid15274402  i=lyst.}{\f5\cf11\insrsid15274402 count down}{\f5\cf17\insrsid15274402  to}{\f5\cf15\insrsid15274402  1}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  lyst[i]=}{\f5\cf11\insrsid15274402 #none}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  lyst.}{\f5\cf11\insrsid15274402 deleteat}{\f5\insrsid15274402 (i)
\par }{\f5\cf17\insrsid15274402     else if}{\f5\cf11\insrsid15274402  symbolp}{\f5\insrsid15274402 (lyst[i])}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402  
\par }{\f5\cf17\insrsid15274402       return}{\f5\insrsid15274402  lyst[i]
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end repeat}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  lyst.}{\f5\cf11\insrsid15274402 count}{\f5\insrsid15274402 =}{\f5\cf15\insrsid15274402 0}{\f5\cf17\insrsid15274402  then return}{\f5\cf11\insrsid15274402  #none}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   if}{\f5\insrsid15274402  lyst.}{\f5\cf11\insrsid15274402 count}{\f5\insrsid15274402 =}{\f5\cf15\insrsid15274402 1}{\f5\cf17\insrsid15274402  then return}{\f5\insrsid15274402  lyst[}{\f5\cf15\insrsid15274402 1}{
\f5\insrsid15274402 ]
\par   mn=lyst[}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 ].t
\par   mi=}{\f5\cf15\insrsid15274402 1}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   repeat with}{\f5\insrsid15274402  i=}{\f5\cf15\insrsid15274402 2}{\f5\cf17\insrsid15274402  to}{\f5\insrsid15274402  lyst.}{\f5\cf11\insrsid15274402 count}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402     if}{\f5\insrsid15274402  lyst[i].t<mn}{\f5\cf17\insrsid15274402  then}{\f5\insrsid15274402 
\par       mn=lyst[i].t
\par       mi=i
\par }{\f5\cf17\insrsid15274402     end if}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   end repeat}{\f5\insrsid15274402 
\par }{\f5\cf17\insrsid15274402   return}{\f5\insrsid15274402  lyst[mi]
\par }{\f5\cf17\insrsid15274402 end}{\f5\insrsid15274402  
\par }{\b\f5\fs36\ul\insrsid15274402\charrsid15274402 
\par }{\f5\insrsid15274402 
\par }{\b\f5\fs36\ul\insrsid15274402\charrsid15274402 
\par 
\par }{\f5\insrsid15274402 
\par }\pard \s15\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid12267034 {\b\f5\fs36\ul\insrsid15274402\charrsid12267034 
\par }}